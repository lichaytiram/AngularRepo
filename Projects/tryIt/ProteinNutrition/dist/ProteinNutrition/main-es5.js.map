{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/shared/modules/app-routing.module.ts","webpack:///src/app/shared/services/protein.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/store/actions/index.ts","webpack:///src/app/store/actions/protein.action.ts","webpack:///src/app/store/actions/user.action.ts","webpack:///src/app/store/effects/index.ts","webpack:///src/app/store/effects/protein.effect.ts","webpack:///src/app/store/effects/user.effects.ts","webpack:///src/app/store/index.ts","webpack:///src/app/store/reducers/index.ts","webpack:///src/app/store/reducers/protein.reducer.ts","webpack:///src/app/store/reducers/user.reducer.ts","webpack:///src/app/store/selectors/index.ts","webpack:///src/app/store/selectors/protein.selectors.ts","webpack:///src/app/store/selectors/user.selectors.ts","webpack:///src/app/storeRouter/index.ts","webpack:///src/app/storeRouter/reducers/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","forRoot","routerState","runtimeChecks","strictStateImmutability","strictActionImmutability","strictStateSerializability","strictActionSerializability","forFeature","instrument","maxAge","logOnly","production","declarations","imports","providers","bootstrap","NavbarComponent","store","unSubscribe","push","pipe","subscribe","popupToggle","error","console","log","forEach","unsubscribe","sessionStorage","getItem","routes","path","loadChildren","m","ProductModule","redirectTo","pathMatch","AppRoutingModule","ProteinService","http","URL","endURL","userId","protein","url","post","json","get","result","proteins","Object","entries","map","value","put","proteinToUpdate","proteinId","providedIn","UserService","user","login","register","some","username","password","userToUpdate","LoadProteins","LoadProteinsFail","LoadProteinsSuccess","AddProtein","AddProteinFail","AddProteinSuccess","UpdateProtein","UpdateProteinFail","UpdateProteinSuccess","DeleteProtein","DeleteProteinFail","DeleteProteinSuccess","DeleteAllProteins","DeleteAllProteinsFail","DeleteAllProteinsSuccess","ProteinLogout","CreateUser","CreateUserFail","CreateUserSuccess","LoadUser","LoadUserFail","LoadUserSuccess","LoginUser","LoginUserFail","LoginUserSuccess","UpdateUser","UpdateUserFail","UpdateUserSuccess","DeleteUser","DeleteUserFail","DeleteUserSuccess","UserUpdated","UserLogout","UserPopupOn","UserPopupOff","UserCreatedOff","UserLoginFailOff","effects","ProteinEffect","actions$","proteinService","loadProteins$","action","getProteins","createProtein$","createProtein","name","updateProtein$","updateProtein","deleteProtein$","deleteProtein","deleteAllproteins$","deleteAllProteins","UserEffects","userService","router","loadUser$","getUser","createUser$","createUser","loginUser$","navigate","updateUser$","updateUser","deleteUser$","deleteUser","reducers","getProductsState","adapter","initialState","getInitialState","loaded","proteinReducer","state","addAll","addOne","changes","entities","newProtein","update","updateOne","removeOne","getSelectors","selectEntities","selectAll","getAllProteins","getProteinsEntities","getProteinLoaded","created","loginFail","updated","popup","userReducer","removeItem","setItem","getCreated","getLoginFail","getUserLoaded","getUserUpdated","getPopup","getProteinState","proteinState","getSelectedProtein","parseInt","params","getUserState","userState","getUserCreated","reducer","routerReducer","getRouterState","CustomSerializer","root","firstChild","queryParams","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProteinNutrition';\n}\n","<div>\n  <app-navbar></app-navbar>\n</div>","import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './shared/modules/app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { RouterStateSerializer, StoreRouterConnectingModule, RouterState } from '@ngrx/router-store';\nimport { reducer, CustomSerializer } from './storeRouter';\n\nimport { reducers, effects } from './store';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n\n    StoreRouterConnectingModule.forRoot({\n      routerState: RouterState.Minimal,\n    }),\n\n    EffectsModule.forRoot(effects),\n\n    StoreModule.forRoot(reducer, {\n      runtimeChecks: {\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n      },\n    }),\n\n    StoreModule.forFeature('products', reducers),\n\n    // Only a tool for developers will delete on products\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n\n  ],\n  providers: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState, getPopup } from '../store';\r\nimport { Subscription, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { unsupported } from '@angular/compiler/src/render3/view/util';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n\r\n  // Toggles\r\n  public popupToggle: boolean;\r\n\r\n  private unSubscribe: Subscription[] = [];\r\n\r\n  constructor(private store: Store<IProductsState>) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.unSubscribe.push(this.store.pipe(select(getPopup)).subscribe(\r\n      popupToggle => this.popupToggle = popupToggle,\r\n      catchError(error => of(console.log(error)))\r\n    ));\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.unSubscribe.forEach(subscribe => subscribe.unsubscribe());\r\n\r\n  }\r\n\r\n  public login(): string {\r\n    return !!sessionStorage.getItem('login') ? \"\" : \"login\";\r\n  }\r\n\r\n}","<div>\r\n\r\n        <header class=\"fixed-top\" [class.opacity]=\"popupToggle\">\r\n\r\n                <nav class=\"navbar\">\r\n\r\n                        <button routerLink=\"product/home\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm bg-secondary\"><span class=\"fas fa-home\">\r\n                                </span>\r\n                                Home</button>\r\n\r\n                        <button routerLink=\"product/account/{{login()}}\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm bg-dark text-light\"><span\r\n                                        class=\"fas fa-user-circle\">\r\n                                </span>\r\n                                Account</button>\r\n\r\n                        <button routerLink=\"product/account/favorite\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm bg-secondary\"><span\r\n                                        class=\"far fa-thumbs-up\"></span>\r\n                                Favorite</button>\r\n\r\n                        <button routerLink=\"product/info\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm bg-dark text-light\"><span\r\n                                        class=\"fas fa-question-circle\"></span>\r\n                                Info</button>\r\n\r\n                </nav>\r\n\r\n                <div class=\"row\">\r\n\r\n                        <label class=\"p-0 m-0 col-1 sideImage\"></label>\r\n                        <img src=\"/assets/photos/bodybuilding_weightlifting.jpg\"\r\n                                class=\"backgroundImage col-5 smartphone\">\r\n                        <img src=\"/assets/photos/sport_girl_fitness.jpg\" class=\"backgroundImage col-4 smartphone\">\r\n                        <img src=\"/assets/photos/sport_girl_fitness_right.jpg\" class=\"backgroundImage col-1 smartphone\">\r\n                        <label class=\"p-0 m-0 col-1 sideImage\"></label>\r\n\r\n                </div>\r\n\r\n        </header>\r\n\r\n        <main>\r\n                <router-outlet></router-outlet>\r\n        </main>\r\n\r\n        <footer [class.opacity]=\"popupToggle\" class=\"text-light bg-dark text-center\">\r\n                <small>&copy; Created by - Lichay Tiram -</small>\r\n        </footer>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'product', loadChildren: () => import('./product/product.module').then(m => m.ProductModule) },\r\n  { path: '**', redirectTo: 'product/home', pathMatch: 'full' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IProtein } from '../models/iProtein.model';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { IId } from '../models/iId.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProteinService {\r\n\r\n  private URL: string = \"https://protein-757b1.firebaseio.com/proteins/\";\r\n  private endURL: string = \".json\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createProtein(userId: string, protein: IProtein): Observable<IId> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.post<IId>(url, protein).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  // Firebase database request, don't have any straight way (api)\r\n  public getProteins(userId: string): Observable<IProtein[]> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.get<Observable<IProtein[]>>(url)\r\n      .pipe(\r\n        map(\r\n          result => {\r\n            let proteins: IProtein[] = [];\r\n\r\n            Object.entries(result).map(value => {\r\n              value[1].id = value[0];\r\n              proteins.push(value[1]);\r\n            })\r\n\r\n            return proteins;\r\n          }),\r\n        catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public updateProtein(userId: string,protein: IProtein): Observable<IProtein> {\r\n    const { id, ...proteinToUpdate } = protein;\r\n    const url = `${this.URL}/${userId}/${id}${this.endURL}`;\r\n    return this.http.put<IProtein>(url, proteinToUpdate).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public deleteProtein(userId: string, proteinId: string): Observable<any> {\r\n    const url = `${this.URL}/${userId}/${proteinId}${this.endURL}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public deleteAllProteins(userId: string): Observable<any> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IUser } from '../models/iUser.model';\r\nimport { catchError, map, switchMap, tap, take } from 'rxjs/operators';\r\nimport { ILogin } from '../models/iLogin.model';\r\nimport { IId } from '../models/iId.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private URL: string = \"https://protein-757b1.firebaseio.com/users\";\r\n  private endURL: string = \".json\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createUser(user: IUser): Observable<IId> {\r\n    const url = this.URL + this.endURL;\r\n    return this.http.post<IId>(url, user)\r\n      .pipe(catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public getAllUsers(): Observable<IUser[]> {\r\n    const url = this.URL + this.endURL;\r\n    return this.http.get<IUser[]>(url)\r\n      .pipe(catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  // Firebase database request, don't have any straight way (api)\r\n  public login(login: ILogin): Observable<IUser> {\r\n    const url = this.URL + this.endURL;\r\n    return this.http.get<Observable<IUser>>(url)\r\n      .pipe(\r\n        map(\r\n          result => {\r\n            let register: IUser = null;\r\n\r\n            Object.entries(result).some(value => {\r\n\r\n              if (value[1].username === login.username && value[1].password === login.password) {\r\n                value[1].id = value[0];\r\n                register = value[1];\r\n                return true;\r\n              };\r\n            });\r\n\r\n            return register;\r\n          }),\r\n        catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public getUser(userId: string): Observable<IUser> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.get<IUser>(url)\r\n      .pipe(catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public updateUser(user: IUser): Observable<IUser> {\r\n    const { id, ...userToUpdate } = user;\r\n    const url = `${this.URL}/${id}${this.endURL}`;\r\n    return this.http.put<IUser>(url, userToUpdate).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public deleteUser(userId: string): Observable<any> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n}\r\n","export * from './protein.action';\r\nexport * from './user.action';","import { createAction, props } from '@ngrx/store';\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\nexport const LoadProteins = createAction('[Products] Load Proteins', props<{ userId: string }>());\r\nexport const LoadProteinsFail = createAction('[Products] Load Proteins Fail', props<{ error: Error }>());\r\nexport const LoadProteinsSuccess = createAction('[Products] Load Proteins Success', props<{ proteins: IProtein[] }>());\r\nexport const AddProtein = createAction('[Products] Add Protein', props<{ userId: string, protein: IProtein }>());\r\nexport const AddProteinFail = createAction('[Products] Add Protein Fail', props<{ error: Error }>());\r\nexport const AddProteinSuccess = createAction('[Products] Add Protein Success', props<{ protein: IProtein }>());\r\nexport const UpdateProtein = createAction('[Products] Update Protein', props<{ userId: string, protein: IProtein }>())\r\nexport const UpdateProteinFail = createAction('[Products] Update Protein Fail', props<{ error: Error }>())\r\nexport const UpdateProteinSuccess = createAction('[Products] Update Protein Success', props<{ protein: IProtein }>())\r\nexport const DeleteProtein = createAction('[Products] Delete Protein', props<{ userId: string, proteinId: string }>());\r\nexport const DeleteProteinFail = createAction('[Products] Delete Protein Fail', props<{ error: Error }>());\r\nexport const DeleteProteinSuccess = createAction('[Products] Delete Protein Success', props<{ proteinId: string }>());\r\nexport const DeleteAllProteins = createAction('[Products] Delete All Proteins', props<{ userId: string }>());\r\nexport const DeleteAllProteinsFail = createAction('[Products] Delete All Proteins Fail', props<{ error: Error }>());\r\nexport const DeleteAllProteinsSuccess = createAction('[Products] Delete All Proteins Success');\r\nexport const ProteinLogout = createAction('[Products] Protein Logout');","import { createAction, props } from '@ngrx/store';\r\nimport { IUser } from '../../shared/models/iUser.model';\r\nimport { ILogin } from 'src/app/shared/models/iLogin.model';\r\n\r\nexport const CreateUser = createAction('[Products] Create User', props<{ user: IUser }>());\r\nexport const CreateUserFail = createAction('[Products] Create User Fail', props<{ error: Error }>());\r\nexport const CreateUserSuccess = createAction('[Products] Create User Success', props<{ user: IUser }>());\r\nexport const LoadUser = createAction('[Products] Load User', props<{ userId: string }>());\r\nexport const LoadUserFail = createAction('[Products] Load User Fail', props<{ error: Error }>());\r\nexport const LoadUserSuccess = createAction('[Products] Load User Success', props<{ user: IUser }>());\r\nexport const LoginUser = createAction('[Products] Login User', props<{ login: ILogin }>());\r\nexport const LoginUserFail = createAction('[Products] Login User Fail', props<{ error: Error }>());\r\nexport const LoginUserSuccess = createAction('[Products] Login User Success', props<{ user: IUser }>());\r\nexport const UpdateUser = createAction('[Products] Update User', props<{ user: IUser }>());\r\nexport const UpdateUserFail = createAction('[Products] Update User Fail', props<{ error: Error }>());\r\nexport const UpdateUserSuccess = createAction('[Products] Update User Success', props<{ user: IUser }>());\r\nexport const DeleteUser = createAction('[Products] Delete User', props<{ userId: string }>());\r\nexport const DeleteUserFail = createAction('[Products] Delete User Fail', props<{ error: Error }>());\r\nexport const DeleteUserSuccess = createAction('[Products] Delete User Success');\r\nexport const UserUpdated = createAction('[Products] User Updated');\r\nexport const UserLogout = createAction('[Products] User Logout');\r\nexport const UserPopupOn = createAction('[Products] User Popup On');\r\nexport const UserPopupOff = createAction('[Products] User Popup Off');\r\nexport const UserCreatedOff = createAction('[Products] User Created Off');\r\nexport const UserLoginFailOff = createAction('[Products] User Login Fail Off');","import { UserEffects } from './user.effects';\r\nimport { ProteinEffect } from './protein.effect';\r\n\r\nexport const effects: any[] = [UserEffects, ProteinEffect];","import { Injectable } from '@angular/core';\r\n\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\nimport { ProteinService } from 'src/app/shared/services/protein.service';\r\nimport * as proteinActions from '../actions/protein.action';\r\nimport { IId } from 'src/app/shared/models/iId.model';\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProteinEffect {\r\n\r\n  constructor(private actions$: Actions, private proteinService: ProteinService) { }\r\n\r\n  public loadProteins$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.LoadProteins),\r\n    switchMap(action => this.proteinService.getProteins(action.userId).pipe(\r\n      map(proteins => proteinActions.LoadProteinsSuccess({ proteins })),\r\n      catchError(error => of(proteinActions.LoadProteinsFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public createProtein$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.AddProtein),\r\n    switchMap(action => this.proteinService.createProtein(action.userId, action.protein).pipe(\r\n      map((userId: IId) => {\r\n        const protein: IProtein = action.protein;\r\n        protein.id = userId.name;\r\n\r\n        return proteinActions.AddProteinSuccess({ protein });\r\n      }),\r\n      catchError(error => of(proteinActions.AddProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public updateProtein$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.UpdateProtein),\r\n    switchMap(action => this.proteinService.updateProtein(action.userId, action.protein).pipe(\r\n      map(() => proteinActions.UpdateProteinSuccess({ protein: action.protein })),\r\n      catchError(error => of(proteinActions.UpdateProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public deleteProtein$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.DeleteProtein),\r\n    switchMap(action => this.proteinService.deleteProtein(action.userId, action.proteinId).pipe(\r\n      map(() => proteinActions.DeleteProteinSuccess({ proteinId: action.proteinId })),\r\n      catchError(error => of(proteinActions.DeleteProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public deleteAllproteins$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.DeleteAllProteins),\r\n    switchMap(action => this.proteinService.deleteAllProteins(action.userId).pipe(\r\n      map(() => proteinActions.DeleteAllProteinsSuccess()),\r\n      catchError(error => of(proteinActions.DeleteAllProteinsFail(error)))\r\n\r\n    ))\r\n  ));\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { of } from 'rxjs';\r\n\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\nimport * as userActions from '../actions/user.action';\r\nimport * as proteinActions from '../actions/protein.action';\r\n\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\n\r\nimport { IId } from 'src/app/shared/models/iId.model';\r\nimport { IUser } from 'src/app/shared/models/iUser.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserEffects {\r\n\r\n  constructor(private actions$: Actions, private userService: UserService, private router: Router) { }\r\n\r\n  public loadUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.LoadUser),\r\n    switchMap(action => this.userService.getUser(action.userId).pipe(\r\n      map((user: IUser) => {\r\n        user.id = action.userId;\r\n        return userActions.LoadUserSuccess({ user: user })\r\n      }),\r\n      catchError(error => of(userActions.LoadUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public createUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.CreateUser),\r\n    switchMap(action => this.userService.createUser(action.user).pipe(\r\n      map((userId: IId) => {\r\n\r\n        const { user } = action;\r\n        user.id = userId.name;\r\n\r\n        return userActions.CreateUserSuccess({ user });\r\n      }),\r\n      catchError(error => of(userActions.CreateUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public loginUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.LoginUser),\r\n    switchMap(action => this.userService.login(action.login).pipe(\r\n      map((user: IUser) => {\r\n        this.router.navigate(['product/account']);\r\n        return userActions.LoginUserSuccess({ user });\r\n      }),\r\n      catchError(error => of(userActions.LoginUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public updateUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.UpdateUser),\r\n    switchMap(action => this.userService.updateUser(action.user).pipe(\r\n      map((user: IUser) => {\r\n        user.id = action.user.id;\r\n        return userActions.UpdateUserSuccess({ user });\r\n      }),\r\n      catchError(error => of(userActions.UpdateUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public deleteUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.DeleteUser),\r\n    switchMap(action => this.userService.deleteUser(action.userId).pipe(\r\n      map(() => {\r\n        this.router.navigate([\"product/home\"]);\r\n        return userActions.DeleteUserSuccess();\r\n      }),\r\n      catchError(error => of(proteinActions.DeleteProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n}","export * from './actions';\r\nexport * from './reducers';\r\nexport * from './selectors';\r\nexport * from './effects';","import { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\nimport { IProteinState, proteinReducer } from './protein.reducer';\r\nimport { IUserState, userReducer } from './user.reducer';\r\n\r\nexport interface IProductsState {\r\n    user: IUserState,\r\n    protein: IProteinState\r\n};\r\n\r\nexport const reducers: ActionReducerMap<IProductsState> = {\r\n    user: userReducer,\r\n    protein: proteinReducer\r\n};\r\n\r\nexport const getProductsState = createFeatureSelector<IProductsState>(\"products\");","import { IProtein } from 'src/app/shared/models/iProtein.model';\r\nimport { EntityAdapter, createEntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport * as fromProtein from '../actions/protein.action';\r\nimport { UpdateStr } from '@ngrx/entity/src/models';\r\n\r\nexport const adapter: EntityAdapter<IProtein> = createEntityAdapter<IProtein>();\r\n\r\nexport interface IProteinState extends EntityState<IProtein> {\r\n    loaded: boolean;\r\n}\r\n\r\nexport const initialState: IProteinState = adapter.getInitialState({\r\n    loaded: false\r\n})\r\n\r\nexport const proteinReducer = createReducer<IProteinState>(\r\n    initialState\r\n    , on(\r\n        fromProtein.LoadProteinsSuccess, (state: IProteinState, action) => {\r\n            const { proteins } = action;\r\n            return {\r\n                ...adapter.addAll(proteins, state),\r\n                loaded: true\r\n            }\r\n        }\r\n    ), on(\r\n        fromProtein.ProteinLogout, () => {\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromProtein.AddProteinSuccess, (state: IProteinState, action) => {\r\n            const { protein } = action;\r\n            return adapter.addOne(protein, state);\r\n        }\r\n    ), on(\r\n        fromProtein.UpdateProteinSuccess, (state: IProteinState, action) => {\r\n            const { protein } = action;\r\n            const { id, ...newProtein } = protein;\r\n            const changes: Partial<IProtein> = { id, ...state.entities[id] = newProtein }\r\n            const update: UpdateStr<IProtein> = { id, changes };\r\n            return adapter.updateOne(update, state);\r\n        }\r\n    ), on(\r\n        fromProtein.DeleteProteinSuccess, (state: IProteinState, action) => {\r\n            const { proteinId } = action;\r\n            return adapter.removeOne(proteinId, state);\r\n        }\r\n    ), on(\r\n        fromProtein.DeleteAllProteinsSuccess, () => {\r\n            return initialState;\r\n        }\r\n    )\r\n\r\n);\r\n\r\nconst { selectEntities, selectAll } = adapter.getSelectors();\r\n\r\nexport const getAllProteins = selectAll;\r\nexport const getProteinsEntities = selectEntities;\r\nexport const getProteinLoaded = (state: IProteinState) => state.loaded;","import { IUser } from 'src/app/shared/models/iUser.model';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport * as fromUser from '../actions/user.action';\r\n\r\nexport interface IUserState {\r\n    user: IUser;\r\n    created: boolean;\r\n    loginFail: boolean;\r\n    loaded: boolean;\r\n    updated: boolean;\r\n    popup: boolean;\r\n}\r\n\r\nexport const initialState: IUserState = {\r\n    user: null,\r\n    created: false,\r\n    loginFail: false,\r\n    loaded: false,\r\n    updated: false,\r\n    popup: false\r\n}\r\n\r\nexport const userReducer = createReducer<IUserState>(\r\n    initialState\r\n    , on(\r\n        fromUser.LoadUserSuccess, (state: IUserState, action) => {\r\n            const { user } = action;\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                user\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.LoginUserFail, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                loginFail: true\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserLogout, () => {\r\n            sessionStorage.removeItem(\"login\");\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromUser.UserPopupOn, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                popup: true\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserPopupOff, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                popup: false\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.CreateUserSuccess, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                created: true\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserCreatedOff, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                created: false\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserLoginFailOff, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                loginFail: false\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.LoginUserSuccess, (state: IUserState, action) => {\r\n            const { user } = action;\r\n            sessionStorage.setItem(\"login\", user.id);\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                user\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UpdateUserSuccess, (state: IUserState, action) => {\r\n            const { user } = action;\r\n            return {\r\n                ...state,\r\n                updated: true,\r\n                user\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.DeleteUserSuccess, () => {\r\n            sessionStorage.removeItem(\"login\");\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromUser.UserUpdated, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                updated: false\r\n            };\r\n        }\r\n    )\r\n\r\n);\r\n\r\nexport const getUser = (state: IUserState) => state.user;\r\nexport const getCreated = (state: IUserState) => state.created;\r\nexport const getLoginFail = (state: IUserState) => state.loginFail;\r\nexport const getUserLoaded = (state: IUserState) => state.loaded;\r\nexport const getUserUpdated = (state: IUserState) => state.updated;\r\nexport const getPopup = (state: IUserState) => state.popup;","export * from './protein.selectors';\r\nexport * from './user.selectors';","import { createSelector } from '@ngrx/store';\r\n\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromProtein from '../reducers/protein.reducer';\r\nimport { getRouterState } from 'src/app/storeRouter';\r\n\r\nexport const getProteinState = createSelector(\r\n    fromFeature.getProductsState,\r\n    (proteinState: fromFeature.IProductsState) => proteinState.protein\r\n)\r\n\r\nexport const getAllProteins = createSelector(getProteinState, fromProtein.getAllProteins);\r\nexport const getProteinLoaded = createSelector(getProteinState, fromProtein.getProteinLoaded);\r\nexport const getProteinsEntities = createSelector(getProteinState, fromProtein.getProteinsEntities);\r\n\r\nexport const getSelectedProtein = createSelector(\r\n    getProteinsEntities,\r\n    getRouterState,\r\n    (entities, router): IProtein => router.state && entities[parseInt(router.state.params.proteinId)]\r\n)","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromUser from '../reducers/user.reducer'\r\n\r\nexport const getUserState = createSelector(\r\n    fromFeature.getProductsState,\r\n    (userState: fromFeature.IProductsState) => userState.user\r\n)\r\n\r\nexport const getUser = createSelector(getUserState, fromUser.getUser);\r\nexport const getUserCreated = createSelector(getUserState, fromUser.getCreated);\r\nexport const getLoginFail = createSelector(getUserState, fromUser.getLoginFail);\r\nexport const getUserLoaded = createSelector(getUserState, fromUser.getUserLoaded);\r\nexport const getUserUpdated = createSelector(getUserState, fromUser.getUserUpdated);\r\nexport const getPopup = createSelector(getUserState, fromUser.getPopup);","export * from './reducers';","import { RouterReducerState, routerReducer, RouterStateSerializer } from '@ngrx/router-store';\r\nimport { Params, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\n\r\nexport interface IRouterStateUrl {\r\n    url: string,\r\n    params: Params,\r\n    queryParams: Params\r\n}\r\n\r\nexport interface IState {\r\n    routerReducer: RouterReducerState<IRouterStateUrl>\r\n}\r\n\r\nexport const reducer: ActionReducerMap<IState> = {\r\n    routerReducer: routerReducer\r\n}\r\n\r\nexport const getRouterState = createFeatureSelector<RouterReducerState<IRouterStateUrl>>(\"routerReducer\");\r\n\r\nexport class CustomSerializer implements RouterStateSerializer<IRouterStateUrl> {\r\n\r\n    serialize(routerState: RouterStateSnapshot): IRouterStateUrl {\r\n\r\n        let state: ActivatedRouteSnapshot = routerState.root;\r\n\r\n        while (state.firstChild)\r\n            state = state.firstChild;\r\n\r\n        const { url } = routerState;\r\n        const { params } = state\r\n        const { queryParams } = routerState.root;\r\n\r\n        return { url, params, queryParams };\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}