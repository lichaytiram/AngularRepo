{"version":3,"sources":["./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/favorite/favorite.component.ts","./src/app/favorite/favorite.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/shared/models/login.model.ts","./src/app/shared/modules/account/account.module.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { NgModel, NgForm } from '@angular/forms';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState } from '../store';\r\nimport { UserLogout, ProteinLogout, DeleteUser, DeleteAllProteins, UpdateUser, UserUpdated } from '../store/actions/index';\r\nimport { getUser, getUserUpdated } from '../store/selectors/user.selectors';\r\n\r\nimport { IUser } from '../shared/models/iUser.model';\r\nimport { User } from '../shared/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit, OnDestroy {\r\n\r\n  public user$: Observable<IUser>;\r\n  public newUser: IUser;\r\n\r\n  // toggles to show\r\n  public editToggle: boolean;\r\n  public usernameToggle: boolean;\r\n  public passwordToggle: boolean;\r\n  public genderToggle: boolean;\r\n  public weightToggle: boolean;\r\n\r\n  public updateToggle: boolean;\r\n  public deleteToggle: boolean;\r\n\r\n  // click button for show password instead ******.\r\n  public showPasswordToggle: boolean;\r\n\r\n  // unSubscribe list\r\n  private unSubscribe: Subscription[] = [];\r\n\r\n  constructor(private store: Store<IProductsState>, private router: Router) {\r\n\r\n    let isLogin: boolean = !!sessionStorage.getItem(\"login\");\r\n    if (!isLogin)\r\n      this.router.navigate([\"product/login\"]);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.newUser = new User(undefined, undefined, undefined, undefined, undefined);\r\n\r\n    this.user$ = this.store.pipe(select(getUser));\r\n\r\n    this.unSubscribe.push(this.store.pipe(select(getUserUpdated)).subscribe(\r\n      userUpdated => this.updateToggle = userUpdated,\r\n      catchError(error => of(console.log(error)))\r\n    ));\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.unSubscribe.forEach(subscribe => subscribe.unsubscribe());\r\n\r\n  }\r\n\r\n  public logout(): void {\r\n\r\n    this.store.dispatch(UserLogout());\r\n    this.store.dispatch(ProteinLogout());\r\n\r\n    this.router.navigate([\"product/home\"]);\r\n  }\r\n\r\n  public deleteAccount(userId: string): void {\r\n\r\n    // Should be one function , FireBase (data base) doesn't save proteins id as a foreign key.\r\n    this.store.dispatch(DeleteUser({ userId }));\r\n    this.store.dispatch(DeleteAllProteins({ userId }));\r\n\r\n  }\r\n\r\n  public editToggleOn(): void {\r\n    this.editToggle = true;\r\n  }\r\n\r\n  public editToggleOff(): void {\r\n    this.editToggle = false;\r\n    this.allTogglesOff();\r\n  }\r\n\r\n  // check if one of Toggles is on\r\n  public allowToEdit(): boolean {\r\n\r\n    if (this.editToggle && this.findAvailableToken())\r\n      return true;\r\n    return false;\r\n\r\n  }\r\n\r\n  // check if one of Toggles is on and return toggle name\r\n  private findAvailableToken(): string {\r\n\r\n    if (this.usernameToggle)\r\n      return \"username\";\r\n\r\n    if (this.passwordToggle)\r\n      return \"password\";\r\n\r\n    if (this.genderToggle)\r\n      return \"gender\";\r\n\r\n    if (this.weightToggle)\r\n      return \"weight\";\r\n\r\n    return null;\r\n\r\n  }\r\n\r\n  public deleteAccountSwitch() {\r\n    this.deleteToggle = !this.deleteToggle;\r\n  }\r\n\r\n  public showPasswordSwitch() {\r\n    this.showPasswordToggle = !this.showPasswordToggle;\r\n  }\r\n\r\n  public nameToggle(toggleName: string): void {\r\n\r\n    this.newUser = new User(undefined, undefined, undefined, undefined, undefined);\r\n\r\n    this.allTogglesOff();\r\n\r\n    switch (toggleName) {\r\n      case \"username\":\r\n        this.usernameToggle = true;\r\n        break;\r\n      case \"password\":\r\n        this.passwordToggle = true;\r\n        break;\r\n      case \"gender\":\r\n        this.genderToggle = true;\r\n        break;\r\n      case \"weight\":\r\n        this.weightToggle = true;\r\n        break;\r\n      default:\r\n        alert(\"Something was wrong!\\nPlease try again.\");\r\n    }\r\n\r\n  }\r\n\r\n  public cancelTogglesOff(firstInput?: NgModel, secondInput?: NgModel) {\r\n\r\n    if (firstInput)\r\n      firstInput.reset();\r\n\r\n    if (secondInput)\r\n      secondInput.reset();\r\n\r\n    this.allTogglesOff();\r\n  }\r\n\r\n  public allTogglesOff(): void {\r\n    this.usernameToggle = false;\r\n    this.passwordToggle = false;\r\n    this.genderToggle = false;\r\n    this.weightToggle = false;\r\n  }\r\n\r\n  public updateUser(oldUser: IUser, userForm: NgForm): void {\r\n\r\n    const valueToUpdate: string = this.findAvailableToken();\r\n\r\n    let user: IUser = { ...oldUser };\r\n    const userValue = { ...this.newUser }\r\n\r\n    // Update the user with new value\r\n    switch (valueToUpdate) {\r\n      case \"username\":\r\n        user.username = userValue.username;\r\n        break;\r\n      case \"password\":\r\n        user.password = userValue.password;\r\n        user.confirmPassword = userValue.confirmPassword;\r\n        break;\r\n      case \"gender\":\r\n        user.gender = userValue.gender;\r\n        break;\r\n      case \"weight\":\r\n        user.weight = userValue.weight;\r\n        break;\r\n      default:\r\n        alert(\"Something was wrong!\\nPlease try again.\");\r\n\r\n    }\r\n\r\n    this.store.dispatch(UpdateUser({ user }));\r\n\r\n    setTimeout(() => {\r\n      this.store.dispatch(UserUpdated());\r\n      this.allTogglesOff();\r\n\r\n      if (valueToUpdate != \"gender\")\r\n        userForm.controls[valueToUpdate].reset();\r\n\r\n    }, 2000);\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"user$ | async as user\">\r\n\r\n\r\n    <div class=\"text-center\">\r\n\r\n        <div *ngIf=\"deleteToggle\">\r\n\r\n            <div class=\"card show\">\r\n\r\n                <div class=\"card-body\">\r\n\r\n                    <h4>You are try to delete your account!</h4>\r\n                    <h5>Please confirm!</h5>\r\n                    <input type=\"button\" value=\"&#xf2ed; Delete\" (click)=\"deleteAccount(user.id)\"\r\n                        class=\"fas p-1 btn text-danger\">\r\n                    <input type=\"button\" value=\"&#xf0e2; Cancel\" (click)=\"deleteAccountSwitch()\"\r\n                        class=\"fas p-1 btn text-primary\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div>\r\n\r\n        <button (click)=\"logout()\" class=\"text-primary m-1\">\r\n            <i class=\"fas fa-sign-out-alt\"></i> Log Out</button><br>\r\n        <button [disabled]=\"deleteToggle\" (click)=\"deleteAccountSwitch()\" class=\"text-danger m-1\">\r\n            <i class=\"fas fa-minus-circle\"></i> Delete Account</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n\r\n        <div>\r\n\r\n            <h5 class=\"text-center\">Your user</h5>\r\n\r\n            <form #userForm=\"ngForm\" (ngSubmit)=\"updateUser(user,userForm)\">\r\n\r\n                <div class=\"row justify-content-center\">\r\n\r\n                    <label class=\"col-4 col-sm-3 col-md-2 col-lg-1 col-xl-1 p-0\">Username: </label>\r\n                    <span *ngIf=\"!editToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">{{user.username}}</span>\r\n                    <input *ngIf=\"editToggle && !usernameToggle\" type=\"button\" [disabled]=\"allowToEdit()\"\r\n                        value=\"&#xf4ff; Edit username\" (click)=\"nameToggle('username')\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0 fas\">\r\n\r\n                    <div [class.d-none]=\"!editToggle || editToggle && !usernameToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n\r\n                        <small class=\"text-danger\" [class.d-none]=\"username.untouched || username.valid\">\r\n                            Must to enter only three letters at least</small>\r\n\r\n                        <input type=\"text\" title=\"Enter an username\" placeholder=\"Enter an username\" name=\"username\"\r\n                            #username=\"ngModel\" [(ngModel)]=\"newUser.username\" required pattern=\"^[a-zA-Z]{3,}$\"\r\n                            [class.border-danger]=\"username.invalid && username.touched\"\r\n                            class=\"rounded-pill border border-primary text-center inputValue\">\r\n\r\n                        <div class=\"row justify-content-around p-1\">\r\n\r\n                            <input type=\"button\" value=\"&#xf410; Cancel\" (click)=\"cancelTogglesOff(username)\"\r\n                                class=\"far text-danger\">\r\n                            <input type=\"submit\" value=\"&#xf0c7; Save\" [disabled]=\"username.invalid || updateToggle\"\r\n                                class=\"btn far text-primary\">\r\n                            <i *ngIf=\"updateToggle && usernameToggle\" class=\"fas fa-check text-success\"></i>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center\">\r\n\r\n                    <label class=\"col-4 col-sm-3 col-md-2 col-lg-1 col-xl-1 p-0\">Password: </label>\r\n\r\n                    <div *ngIf=\"!editToggle\" class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n\r\n                        <span *ngIf=\"!showPasswordToggle\" class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n                            <span>******** </span>\r\n                            <button (click)=\"showPasswordSwitch()\"><i class=\"fas fa-eye eye\"></i></button>\r\n                        </span>\r\n                        <span *ngIf=\"showPasswordToggle\" class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n                            <span>{{user.password}} </span>\r\n                            <button (click)=\"showPasswordSwitch()\"><i class=\"fas fa-eye-slash eye\"></i></button>\r\n                        </span>\r\n\r\n                    </div>\r\n\r\n                    <input *ngIf=\"editToggle && !passwordToggle\" type=\"button\" [disabled]=\"allowToEdit()\"\r\n                        value=\"&#xf4ff; Edit password\" (click)=\"nameToggle('password')\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0 fas\">\r\n\r\n                    <div [class.d-none]=\"!editToggle || editToggle && !passwordToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n\r\n                        <div class=\"text-danger\" [class.d-none]=\"password.untouched || password.valid\">\r\n                            <small>Must to enter eight letters at least.</small>\r\n                            <small>(one upper case one lower case and a number)</small>\r\n                        </div>\r\n\r\n                        <input type=\"password\" title=\"Enter a password\" placeholder=\"Enter a password\" name=\"password\"\r\n                            #password=\"ngModel\" [(ngModel)]=\"newUser.password\" required\r\n                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\r\n                            [class.border-danger]=\"password.invalid && password.touched\"\r\n                            class=\"rounded-pill border border-primary text-center inputValue\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center\" [class.d-none]=\"!editToggle || editToggle && !passwordToggle\">\r\n\r\n                    <label class=\"col-4 col-sm-3 col-md-2 col-lg-1 col-xl-1 p-0\">Confirm: </label>\r\n                    <span *ngIf=\"!editToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">{{user.confirmPassword}}</span>\r\n                    <span *ngIf=\"editToggle && !passwordToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\"></span>\r\n\r\n                    <div [class.d-none]=\"!editToggle || editToggle && !passwordToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n\r\n                        <div class=\"text-danger\"\r\n                            [class.d-none]=\"confirmPassword.untouched || confirmPassword.valid && confirmPassword.value===password.value\">\r\n                            <small>Your passwords isn't match!</small>\r\n                            <small>Please try again.</small>\r\n                        </div>\r\n\r\n                        <input type=\"password\" title=\"Enter again a password to confirm\" placeholder=\"Enter a password\"\r\n                            name=\"confirmPassword\" #confirmPassword=\"ngModel\" [(ngModel)]=\"newUser.confirmPassword\"\r\n                            required pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\r\n                            [disabled]=\"password.invalid\"\r\n                            [class.border-danger]=\"(confirmPassword.touched && confirmPassword.value!==password.value)\"\r\n                            class=\"rounded-pill border border-primary text-center inputValue\">\r\n\r\n                        <div class=\"row justify-content-around p-1\">\r\n\r\n                            <input type=\"button\" value=\"&#xf410; Cancel\"\r\n                                (click)=\"cancelTogglesOff(password,confirmPassword)\" class=\"far text-danger\">\r\n                            <input type=\"submit\" value=\"&#xf0c7; Save\"\r\n                                [disabled]=\"confirmPassword.value!==password.value || password.invalid || updateToggle\"\r\n                                class=\"btn far text-primary\">\r\n                            <i *ngIf=\"updateToggle && passwordToggle\" class=\"fas fa-check text-success\"></i>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center\">\r\n\r\n                    <label class=\"col-4 col-sm-3 col-md-2 col-lg-1 col-xl-1 p-0\">Gender: </label>\r\n                    <span *ngIf=\"!editToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">{{user.gender}}</span>\r\n                    <input *ngIf=\"editToggle && !genderToggle\" type=\"button\" [disabled]=\"allowToEdit()\"\r\n                        value=\"&#xf4ff; Edit gender\" (click)=\"nameToggle('gender')\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0 fas\">\r\n\r\n                    <div [class.d-none]=\"!editToggle || editToggle && !genderToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n\r\n                        <label>\r\n                            <input type=\"radio\" name=\"male\" #male=\"ngModel\" value=\"Male\" required\r\n                                [(ngModel)]=\"newUser.gender\">\r\n                            <span class=\"rounded-pill text-center m-1 radioMale\"><i class=\"fas fa-male m-1\"></i></span>\r\n                        </label>\r\n\r\n                        <label>\r\n                            <input type=\"radio\" name=\"female\" #female=\"ngModel\" value=\"Female\" required\r\n                                [(ngModel)]=\"newUser.gender\">\r\n                            <span class=\"rounded-pill text-center m-1 radioFemale\"><i\r\n                                    class=\"fas fa-female m-1\"></i></span>\r\n                        </label>\r\n\r\n                        <div class=\"row justify-content-around p-1\">\r\n\r\n                            <input type=\"button\" value=\"&#xf410; Cancel\" (click)=\"cancelTogglesOff()\"\r\n                                class=\"far text-danger\">\r\n                            <input type=\"submit\" value=\"&#xf0c7; Save\"\r\n                                [disabled]=\"male.invalid && female.invalid || updateToggle\"\r\n                                class=\"btn far text-primary\">\r\n                            <i *ngIf=\"updateToggle && genderToggle\" class=\"fas fa-check text-success\"></i>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div class=\"row justify-content-center\">\r\n\r\n                    <label class=\"col-4 col-sm-3 col-md-2 col-lg-1 col-xl-1 p-0\">Weight: </label>\r\n                    <span *ngIf=\"!editToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">{{user.weight}}</span>\r\n                    <input *ngIf=\"editToggle && !weightToggle\" type=\"button\" [disabled]=\"allowToEdit()\"\r\n                        value=\"&#xf4ff; Edit weight\" (click)=\"nameToggle('weight')\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0 fas\">\r\n\r\n                    <div [class.d-none]=\"!editToggle || editToggle && !weightToggle\"\r\n                        class=\"col-5 col-sm-4 col-md-3 col-lg-2 col-xl-2 p-0\">\r\n\r\n                        <small class=\"text-danger\" [class.d-none]=\"weight.untouched || weight.valid\">Your weight\r\n                            must be greater than zero .</small>\r\n\r\n                        <input type=\"number\" title=\"Enter your weight\" placeholder=\"Enter a weight\" name=\"weight\"\r\n                            #weight=\"ngModel\" [(ngModel)]=\"newUser.weight\" required pattern=\"^[1-9]\\d*$\"\r\n                            [class.border-danger]=\"weight.invalid && weight.touched\"\r\n                            class=\"rounded-pill border border-primary text-center inputValue\">\r\n\r\n                        <div class=\"row justify-content-around p-1\">\r\n\r\n                            <input type=\"button\" value=\"&#xf410; Cancel\" (click)=\"cancelTogglesOff(weight)\"\r\n                                class=\"far text-danger\">\r\n                            <input type=\"submit\" value=\"&#xf0c7; Save\" [disabled]=\"weight.invalid || updateToggle\"\r\n                                class=\"btn far text-primary\">\r\n                            <i *ngIf=\"updateToggle && weightToggle\" class=\"fas fa-check text-success\"></i>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n\r\n        <div class=\"text-center\">\r\n            <input type=\"button\" value=\"&#xf4ff; Edit account\" [class.d-none]=\"editToggle\" (click)=\"editToggleOn()\"\r\n                class=\"fas text-primary\">\r\n            <input type=\"button\" value=\"&#xf410; Cancel edit\"\r\n                [class.d-none]=\"!editToggle || editToggle && allowToEdit()\" (click)=\"editToggleOff()\"\r\n                class=\"far text-danger\">\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center m-0 img\">\r\n        <img src=\"../../assets/photos/person-holding-black-and-silver-steel.jpg\" class=\"col-11 col-md-9 col-lg-8 col-xl-6\">\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState } from '../store';\r\nimport { UpdateProtein, DeleteProtein } from '../store/actions/protein.action';\r\nimport { getUser, getAllProteins } from '../store/selectors'\r\n\r\n\r\nimport { IUser } from '../shared/models/iUser.model';\r\nimport { IProtein } from '../shared/models/iProtein.model';\r\nimport { IEgg } from '../shared/models/iEgg.model';\r\nimport { Protein } from '../shared/models/protein.model';\r\nimport { Egg } from '../shared/models/egg.model';\r\n\r\nimport { showCalculator } from '../shared/services/showCalculator';\r\n\r\n@Component({\r\n  selector: 'app-favorite',\r\n  templateUrl: './favorite.component.html',\r\n  styleUrls: ['./favorite.component.css']\r\n})\r\nexport class FavoriteComponent implements OnInit {\r\n\r\n  public user$: Observable<IUser>\r\n  public proteins$: Observable<IProtein[]>\r\n\r\n  // Add values for create add of lines in favorites\r\n  public addList: string[];\r\n  public add: string;\r\n\r\n  // Messages to user\r\n  public showMessage: string = \"\";\r\n  public showMessageLogin: string = \"\";\r\n\r\n  // Toggles\r\n  public editToggle: number;\r\n  public addToggle: boolean;\r\n  public updateToggle: boolean;\r\n  public deleteToggle: boolean;\r\n  public animationBlockToggle: boolean;\r\n\r\n  constructor(private store: Store<IProductsState>, private router: Router, private showCalculator: showCalculator) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.addList = [];\r\n    this.user$ = this.store.pipe(select(getUser));\r\n    this.proteins$ = this.store.pipe(select(getAllProteins));\r\n\r\n  }\r\n\r\n  // Add one element inside existing protein\r\n  public addProtein(userId: string, protein: IProtein): void {\r\n\r\n    const valueToAdd: string = this.add;\r\n\r\n    if (valueToAdd === undefined)\r\n      return;\r\n\r\n    if (valueToAdd === 'egg') {\r\n      const egg: IEgg = new Egg(0, 'empty');\r\n      protein.egg = egg;\r\n    } else\r\n      protein[valueToAdd] = 0;\r\n\r\n    this.store.dispatch(UpdateProtein({ userId, protein }));\r\n    this.addToggle = false;\r\n\r\n\r\n  }\r\n\r\n  public saveNewUpdate(userId: string, proteinId: string): void {\r\n\r\n    const index: number = this.editToggle;\r\n    const protein: IProtein = new Protein();\r\n\r\n    Object.keys(protein).filter(key => key !== 'id' && key !== 'egg').forEach(key => {\r\n\r\n      const value = this.getInputValue(key, index);\r\n      if (value)\r\n        protein[key] = value;\r\n\r\n    });\r\n\r\n\r\n    if (this.getInputValue('amount', index) && this.getInputValue('sizeEgg', index)) {\r\n\r\n      const amount: number = Number(this.getInputValue('amount', index));\r\n      const sizeEgg: string = this.getInputValue('sizeEgg', index);\r\n      const egg: IEgg = new Egg(amount, sizeEgg);\r\n      protein.egg = egg;\r\n    }\r\n\r\n    // Send clean Object without undefined properties to Store\r\n    Object.keys(protein).forEach(key => !protein[key] && delete protein[key]);\r\n\r\n    if (!protein.egg || !protein.egg.sizeEgg)\r\n      delete protein.egg;\r\n\r\n    if (this.checkUpdateValidation(protein)) {\r\n      protein.id = proteinId;\r\n      this.store.dispatch(UpdateProtein({ userId, protein }));\r\n      this.cancelEdit();\r\n    } else\r\n      this.updateToggle = true;\r\n\r\n  }\r\n\r\n  public loginPage(): void {\r\n    this.router.navigate(['/product/account/login']);\r\n  }\r\n\r\n  public show(user: IUser, tempProtein: IProtein): void {\r\n\r\n    const { id, egg, ...protein } = tempProtein;\r\n    const sum: number = this.showCalculator.calculateProtein(protein, egg);\r\n\r\n    const value: number = user.weight * 2 - sum;\r\n    this.showMessage = `You eat ${sum} protein approximately.`;\r\n    this.showMessageLogin = value > 0 ? `You need more ${value}` : 'You Eat enough protein for today good job!';\r\n\r\n    this.visibilityOn('show');\r\n  }\r\n\r\n  public cancelShow(): void {\r\n    this.visibilityOff('show');\r\n  }\r\n\r\n  public editToggleSwitch(editToggle: number): void {\r\n    this.animationBlockToggle = true;\r\n    this.editToggle = editToggle;\r\n    this.addToggle = undefined;\r\n  }\r\n\r\n  public updateToggleSwitch(): void {\r\n    this.updateToggle = undefined;\r\n  }\r\n\r\n  public deleteProteinSwitch(): void {\r\n    this.deleteToggle = !this.deleteToggle;\r\n  }\r\n\r\n  public addToggleSwitch(protein: IProtein): void {\r\n\r\n    const tempList: IProtein = new Protein();\r\n    const addList: string[] = [];\r\n\r\n    Object.keys(protein).forEach(key => delete tempList[key]);\r\n    Object.keys(tempList).forEach(key => addList.push(key));\r\n\r\n    this.addToggle = true;\r\n    this.addList = addList;\r\n  }\r\n\r\n  public cancelEdit(): void {\r\n    this.editToggle = undefined;\r\n    this.addToggle = undefined;\r\n  }\r\n\r\n  public deleteProteinConfirmed(userId: string, proteinId: string): void {\r\n\r\n    this.store.dispatch(DeleteProtein({ userId, proteinId }));\r\n    this.deleteProteinSwitch();\r\n\r\n  }\r\n\r\n  public deleteOneProtein(userId: string, proteinId: string, key: string): void {\r\n\r\n    const index: number = this.editToggle;\r\n    if (key === 'egg') {\r\n      this.deleteElement('amount', index);\r\n      this.deleteElement('sizeEgg', index);\r\n    } else\r\n      this.deleteElement(key, index);\r\n\r\n    this.saveNewUpdate(userId, proteinId);\r\n\r\n  }\r\n\r\n  private checkUpdateValidation(protein: IProtein): boolean {\r\n\r\n    const { egg, ...pro } = protein;\r\n\r\n    if (egg && egg.amount < 0)\r\n      return false;\r\n\r\n    let validation: boolean = true\r\n    Object.values(pro).some(value => value < 0 && (validation = false) && true);\r\n\r\n    return validation;\r\n  }\r\n\r\n  // Get element value by his id ( id is contain key and index of array -HTML Template- ).\r\n  private getInputValue(key: string, index: number): string {\r\n    const elementId: string = key + index;\r\n    const inputElement: HTMLInputElement = <HTMLInputElement>document.getElementById(elementId);\r\n    return inputElement?.value;\r\n  }\r\n\r\n  private deleteElement(key: string, index: number): void {\r\n    const elementId: string = key + index;\r\n    document.getElementById(elementId).remove();\r\n  }\r\n\r\n  private visibilityOn(name: string): void {\r\n    document.getElementById(name).className = \"visibility: visible\";\r\n  }\r\n\r\n  private visibilityOff(name: string): void {\r\n    document.getElementById(name).className = \"visibility: invisible\";\r\n  }\r\n\r\n}\r\n","<div class=\"text-center\">\r\n\r\n    <div *ngIf=\"!(user$ |async)\" class=\"disconnected\">\r\n\r\n        <p>You must login to see your favorite list.</p>\r\n        <p>You can click <button (click)=\"loginPage()\">here</button> to move login page</p>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"user$ | async as user\" class=\"connected text-center\">\r\n\r\n        <div class=\"header\">\r\n\r\n            <h2>Welcome Back - {{user.username}}</h2>\r\n            <h3>Your favorite lists</h3>\r\n\r\n        </div>\r\n\r\n        <div *ngFor=\"let protein of proteins$ | async ; index as i;\">\r\n\r\n            <div class=\"inner m-0\">\r\n\r\n                <div class=\"grid p-2\">\r\n\r\n                    <div [class.eggCard]=\"proteinKeyValue.key === 'egg' && editToggle === i && !addToggle\" class=\"card\"\r\n                        [class.d-none]=\"proteinKeyValue.key === 'id'\"\r\n                        *ngFor=\"let proteinKeyValue of protein | keyvalue\">\r\n\r\n                        <div [class.d-none]=\"editToggle !== i || addToggle\">\r\n                            <input type=\"button\" (click)=\"deleteOneProtein(user.id,protein.id,proteinKeyValue.key)\"\r\n                                value=\"&#xf2ed;\" class=\"fas text-danger deleteOneProtein\">\r\n                        </div>\r\n\r\n                        <div *ngIf=\"proteinKeyValue.key !== 'egg'\" class=\"m-0\">\r\n\r\n                            <div class=\"row justify-content-center m-0\">\r\n\r\n                                <label class=\"col-5 col-sm-4 box m-1\">{{proteinKeyValue.key}}</label>\r\n                                <label class=\"col-1\"></label>\r\n                                <label class=\"col-5 col-sm-4 box m-1\"> {{proteinKeyValue.value}}</label>\r\n\r\n                                <div [class.d-none]=\"editToggle !== i || addToggle\" class=\"col-12 p-0\">\r\n\r\n                                    <span class=\"col-2\">{{proteinKeyValue.key}}</span>\r\n\r\n                                    <input type=\"number\" title=\"Enter a new value\" [id]=\"proteinKeyValue.key+i\"\r\n                                        (keyup)=\"proteinKeyValue.value\" [value]=\"proteinKeyValue.value\"\r\n                                        class=\"text-center rounded-pill border border-white inputEdit col-4\">\r\n\r\n                                    <div class=\"d-inline col-2\">\r\n\r\n                                        <label\r\n                                            *ngIf=\"proteinKeyValue.key === 'tuna'|| proteinKeyValue.key === 'meat' || proteinKeyValue.key === 'cheese' || proteinKeyValue.key === 'cottage' || proteinKeyValue.key === 'quinoa'\">grams</label>\r\n                                        <label *ngIf=\"proteinKeyValue.key === 'almonds'\">handful</label>\r\n                                        <label *ngIf=\"proteinKeyValue.key === 'bread'\">slices</label>\r\n                                        <label\r\n                                            *ngIf=\"proteinKeyValue.key === 'powder' || proteinKeyValue.key === 'gainer'\">portions</label>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div *ngIf=\"proteinKeyValue.key === 'egg'\">\r\n\r\n                            <div class=\"row justify-content-center m-0\">\r\n\r\n                                <label class=\"col smallBox p-0 m-2\">{{proteinKeyValue.key}}</label>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row justify-content-center m-0\">\r\n\r\n                                <small class=\"col-5 col-sm-4 box\">amount</small>\r\n                                <label class=\"col-1\"></label>\r\n                                <small class=\"col-5 col-sm-4 box\">{{proteinKeyValue.value.amount}}</small>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row justify-content-center m-0\">\r\n\r\n                                <small class=\"col-5 col-sm-4 box\">size</small>\r\n                                <small class=\"col-1\"></small>\r\n                                <small class=\"col-5 col-sm-4 box\">{{proteinKeyValue.value.sizeEgg}}</small>\r\n\r\n                            </div>\r\n\r\n                            <div [class.d-none]=\"editToggle !== i || addToggle\">\r\n\r\n                                <div class=\"row justify-content-center m-3\">\r\n\r\n                                    <small *ngIf=\"proteinKeyValue.value.sizeEgg === 'empty'\" class=\"text-primary\">*Must\r\n                                        enter an amount and size</small>\r\n\r\n                                    <div class=\"col-12\">\r\n\r\n                                        <small class=\"text-capitalize eggSize\">amount</small>\r\n\r\n                                        <input type=\"number\" title=\"Enter a new value\" [id]=\"'amount'+i\"\r\n                                            (keyup)=\"proteinKeyValue.value.amount\"\r\n                                            [value]=\"proteinKeyValue.value.amount\"\r\n                                            class=\"text-center col-4 rounded-pill border border-white inputEdit\">\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12\">\r\n\r\n                                        <small class=\"text-capitalize eggSize\">size</small>\r\n\r\n                                        <select [id]=\"'sizeEgg'+i\" title=\"Select a new value from list\"\r\n                                            [value]=\"proteinKeyValue.value.sizeEgg\" class=\"text-capitalize col-4\">\r\n                                            <option value=\"S\">small</option>\r\n                                            <option value=\"M\">medium</option>\r\n                                            <option value=\"L\">large</option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div [class.animationBlock]=\"animationBlockToggle\" class=\"card size animation\">\r\n\r\n                    <div *ngIf=\"editToggle !== i\" class=\"col-12 p-0\">\r\n\r\n                        <input type=\"button\" value=\"&#xf06e; Show\" (click)=\"show(user,protein)\"\r\n                            class=\"btn btn-outline-primary rounded-pill far m-1 col-8 col-sm-6\">\r\n\r\n                        <div class=\"col-12 p-0\">\r\n                            <input type=\"button\" value=\"&#xf410; Delete\" (click)=\"deleteProteinSwitch()\"\r\n                                class=\"btn btn-outline-danger rounded-pill far m-1 col-4 col-sm-3\">\r\n                            <input type=\"button\" value=\"&#xf044; Edit\" (click)=\"editToggleSwitch(i)\"\r\n                                class=\"btn btn-outline-secondary rounded-pill fas m-1 col-4 col-sm-3\">\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div *ngIf=\"editToggle === i && !addToggle\" class=\"col-12 p-0\">\r\n\r\n                        <input type=\"button\" value=\"&#xf0c7; Update\" (click)=\"saveNewUpdate(user.id,protein.id)\"\r\n                            class=\"btn btn-outline-primary rounded-pill fas m-1 col-8 col-sm-6\">\r\n                        <div class=\"col-12 p-0\">\r\n                            <input type=\"button\" value=\"&#xf410; Cancel\" (click)=\"cancelEdit()\"\r\n                                class=\"btn btn-outline-danger rounded-pill far m-1 col-4 col-sm-3\">\r\n                            <input type=\"button\" value=\"&#xf0fe; Add\" (click)=\"addToggleSwitch(protein)\"\r\n                                class=\"btn btn-outline-success rounded-pill fas m-1 col-4 col-sm-3\">\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div *ngIf=\"editToggle === i && addToggle\" class=\"col-12 p-0\">\r\n\r\n                        <select [(ngModel)]=\"add\" class=\"text-capitalize text-center col-8 col-sm-6\">\r\n                            <option *ngIf=\"addList?.length === 0\">Your list full</option>\r\n                            <option *ngFor=\"let proteinList of addList\">{{proteinList}}</option>\r\n                        </select>\r\n\r\n                        <div class=\"col-12 p-0\">\r\n                            <input type=\"button\" value=\"&#xf410; Cancel\" (click)=\"cancelEdit()\"\r\n                                class=\"btn btn-outline-danger rounded-pill far m-1 col-4 col-sm-3\">\r\n                            <input type=\"button\" value=\"&#xf0fe; Add\" [disabled]=\"addList?.length === 0\"\r\n                                (click)=\"addProtein(user.id,protein)\"\r\n                                class=\"btn btn-outline-success rounded-pill fas m-1 col-4 col-sm-3\">\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"parallax\"></div>\r\n\r\n            <div *ngIf=\"deleteToggle\">\r\n\r\n                <div class=\"card show\">\r\n\r\n                    <div class=\"card-body\">\r\n                        <h4>You try to delete a protein!</h4>\r\n                        <h5>Please confirm!</h5>\r\n                        <input type=\"button\" value=\"&#xf2ed; Delete\"\r\n                            (click)=\"deleteProteinConfirmed(user.id,protein.id)\" class=\"fas p-1 btn text-danger\">\r\n                        <input type=\"button\" value=\"&#xf0e2; Cancel\" (click)=\"deleteProteinSwitch()\"\r\n                            class=\"fas p-1 btn text-primary\">\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"text-center\">\r\n\r\n            <div id=\"show\" class=\"invisible\">\r\n\r\n                <div class=\"card show\">\r\n\r\n                    <div class=\"card-body\">\r\n                        <p>{{showMessage}}</p>\r\n                        <p *ngIf=\"user\">{{showMessageLogin}}</p>\r\n                        <input type=\"button\" value=\"&#xf164;\" (click)=\"cancelShow()\" class=\"fas showButton\">\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div *ngIf=\"updateToggle\">\r\n\r\n                <div class=\"card update\">\r\n\r\n                    <div class=\"card-body\">\r\n                        <h4>Must enter a positive numbers</h4>\r\n                        <input type=\"button\" value=\"&#xf164;\" (click)=\"updateToggleSwitch()\" class=\"fas updateButton\">\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState } from '../store';\r\nimport { LoginUser, UserLoginFailOff } from '../store/actions/user.action';\r\nimport { getLoginFail } from '../store/selectors/user.selectors';\r\n\r\nimport { ILogin } from '../shared/models/iLogin.model';\r\nimport { Login } from '../shared/models/login.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  public login: ILogin;\r\n  public loginFail$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<IProductsState>, private route: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.login = new Login(undefined, undefined);\r\n    this.loginFail$ = this.store.pipe(select(getLoginFail));\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.store.dispatch(UserLoginFailOff());\r\n\r\n  }\r\n\r\n  public tryAgain() {\r\n    this.store.dispatch(UserLoginFailOff());\r\n  }\r\n\r\n  public userLogin(): void {\r\n    const login: ILogin = this.login;\r\n    this.store.dispatch(LoginUser({ login }));\r\n  }\r\n\r\n  public register(): void {\r\n    this.route.navigate(['/product/register']);\r\n  }\r\n\r\n}","<div class=\"card\">\r\n\r\n    <div *ngIf=\"loginFail$ | async\" class=\"loginFail\">\r\n        <h5>Your username and password don't match!</h5>\r\n\r\n        <button (click)=\"tryAgain()\" class=\"loginFailButton\">\r\n            <h6>Please try again</h6>\r\n            <i class=\"fas fa-undo\"></i>\r\n        </button>\r\n\r\n    </div>\r\n\r\n    <div class=\"p-0 row\">\r\n\r\n        <div class=\"col-8\">\r\n\r\n            <div class=\"card-body\">\r\n\r\n                <h5 class=\"card-title \">Lets login to your user</h5>\r\n                <form (ngSubmit)=\"userLogin()\" #userForm=\"ngForm\">\r\n\r\n                    <div>\r\n                        <p class=\"m-0\">Enter an username</p>\r\n                        <small class=\"text-danger\" [class.d-none]=\"username.untouched || username.valid\">\r\n                            Must to enter only three letters at least.</small>\r\n                        <input type=\"text\" title=\"Enter an username\" name=\"username\" #username=\"ngModel\"\r\n                            [(ngModel)]=\"login.username\" required pattern=\"^[a-zA-Z]{3,}$\"\r\n                            [class.border-danger]=\"username.invalid && username.touched\"\r\n                            class=\"rounded-pill border border-primary\">\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p class=\"m-0\">Enter a password</p>\r\n\r\n                        <div class=\"text-danger\" [class.d-none]=\"password.untouched || password.valid\">\r\n                            <small>Must to enter eight letters at least.</small><br>\r\n                            <small>(one upper case one lower case and a number)</small>\r\n                        </div>\r\n\r\n                        <input type=\"password\" title=\"Enter a password\" name=\"password\" #password=\"ngModel\"\r\n                            [(ngModel)]=\"login.password\" required\r\n                            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\r\n                            [class.border-danger]=\"password.invalid && password.touched\"\r\n                            class=\"rounded-pill border border-primary\">\r\n                    </div>\r\n\r\n                    <div>\r\n\r\n                        <hr>\r\n                        <div class=\"text-center\">\r\n                            <input type=\"submit\" value=\"Login &#xf2f6;\"\r\n                                [class.invalid]=\"userForm.form.invalid && username.touched && password.touched\"\r\n                                [disabled]=\"userForm.form.invalid\" class=\"btn btn-outline-primary rounded-pill m-1 fas\">\r\n                            <input type=\"button\" (click)=\"register()\" value=\"Create &#xf234;\"\r\n                                class=\"btn btn-outline-primary rounded-pill m-1 fas\">\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-4\">\r\n            <img src=\"/assets/photos/man_body_torso_muscles.jpg\" class=\"image\">\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { ILogin } from './iLogin.model';\r\n\r\nexport class Login implements ILogin {\r\n    constructor(\r\n        public username: string,\r\n        public password: string,\r\n    ) { }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../shared.module';\nimport { guards } from 'src/app/store/guards';\nimport { FavoriteComponent } from 'src/app/favorite/favorite.component';\nimport { AccountComponent } from 'src/app/account/account.component';\nimport { LoginComponent } from 'src/app/login/login.component';\n\nconst routes: Routes = [\n    { path: '', component: AccountComponent, canActivate: guards },\n    { path: 'favorite', component: FavoriteComponent, canActivate: guards },\n    { path: 'login', component: LoginComponent },\n]\n\n@NgModule({\n    declarations: [FavoriteComponent, AccountComponent, LoginComponent],\n    imports: [\n        SharedModule,\n        RouterModule.forChild(routes),\n    ]\n})\nexport class AccountModule { }\n"],"sourceRoot":"webpack:///"}