{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/shared/modules/app-routing.module.ts","./src/app/shared/services/protein.service.ts","./src/app/shared/services/user.service.ts","./src/app/store/actions/index.ts","./src/app/store/actions/protein.action.ts","./src/app/store/actions/user.action.ts","./src/app/store/effects/index.ts","./src/app/store/effects/protein.effect.ts","./src/app/store/effects/user.effects.ts","./src/app/store/index.ts","./src/app/store/reducers/index.ts","./src/app/store/reducers/protein.reducer.ts","./src/app/store/reducers/user.reducer.ts","./src/app/store/selectors/index.ts","./src/app/store/selectors/protein.selectors.ts","./src/app/store/selectors/user.selectors.ts","./src/app/storeRouter/index.ts","./src/app/storeRouter/reducers/index.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProteinNutrition';\n}\n","<div>\n  <app-navbar></app-navbar>\n</div>","import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './shared/modules/app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterStateSerializer, StoreRouterConnectingModule, RouterState } from '@ngrx/router-store';\nimport { reducer, CustomSerializer } from './storeRouter';\nimport { reducers, effects } from './store';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n// Only a tool for developers will delete on products\n// import { StoreDevtoolsModule } from '@ngrx/store-devtools';\n// import { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n\n    StoreRouterConnectingModule.forRoot({\n      routerState: RouterState.Minimal,\n    }),\n\n    EffectsModule.forRoot(effects),\n\n    StoreModule.forRoot(reducer, {\n      runtimeChecks: {\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n      },\n    }),\n\n    StoreModule.forFeature('products', reducers),\n\n    // Only a tool for developers will delete on products\n    // StoreDevtoolsModule.instrument({\n    //   maxAge: 25,\n    //   logOnly: environment.production,\n    // }),\n\n  ],\n  providers: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Subscription, of } from 'rxjs';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState, getPopup } from '../store';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n\r\n  // Toggles\r\n  public popupToggle: boolean;\r\n\r\n  private unSubscribe: Subscription[] = [];\r\n\r\n  constructor(private store: Store<IProductsState>) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.unSubscribe.push(this.store.pipe(select(getPopup)).subscribe(\r\n      popupToggle => this.popupToggle = popupToggle,\r\n      catchError(error => of(console.log(error)))\r\n    ));\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.unSubscribe.forEach(subscribe => subscribe.unsubscribe());\r\n\r\n  }\r\n\r\n  public login(): string {\r\n    return !!sessionStorage.getItem('login') ? \"\" : \"login\";\r\n  }\r\n\r\n}","<div>\r\n\r\n        <header class=\"fixed-top\" [class.opacity]=\"popupToggle\">\r\n\r\n                <nav class=\"navbar\">\r\n\r\n                        <button routerLink=\"product/home\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm-3 bg-secondary\"><span class=\"fas fa-home\">\r\n                                </span>\r\n                                Home</button>\r\n\r\n                        <button routerLink=\"product/account/{{login()}}\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm-3 bg-dark text-light\"><span\r\n                                        class=\"fas fa-user-circle\">\r\n                                </span>\r\n                                Account</button>\r\n\r\n                        <button routerLink=\"product/account/favorite\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm-3 bg-secondary\"><span\r\n                                        class=\"far fa-thumbs-up\"></span>\r\n                                Favorite</button>\r\n\r\n                        <button routerLink=\"product/info\" routerLinkActive=\"is-active\"\r\n                                class=\"btn btn-outline-light col-6 col-sm-3 bg-dark text-light\"><span\r\n                                        class=\"fas fa-question-circle\"></span>\r\n                                Info</button>\r\n\r\n                </nav>\r\n\r\n                <div class=\"row\">\r\n\r\n                        <label class=\"p-0 m-0 col-1 sideImage\"></label>\r\n                        <img src=\"/assets/photos/bodybuilding_weightlifting.jpg\"\r\n                                class=\"backgroundImage col-5 smartphone\">\r\n                        <img src=\"/assets/photos/sport_girl_fitness.jpg\" class=\"backgroundImage col-4 smartphone\">\r\n                        <img src=\"/assets/photos/sport_girl_fitness_right.jpg\" class=\"backgroundImage col-1 smartphone\">\r\n                        <label class=\"p-0 m-0 col-1 sideImage\"></label>\r\n\r\n                </div>\r\n\r\n        </header>\r\n\r\n        <main>\r\n                <router-outlet></router-outlet>\r\n        </main>\r\n\r\n        <footer [class.opacity]=\"popupToggle\" class=\"text-light bg-dark text-center\">\r\n                <small>&copy; Created by - Lichay Tiram -</small>\r\n        </footer>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'product', loadChildren: () => import('./product/product.module').then(m => m.ProductModule) },\r\n  { path: '**', redirectTo: 'product/home', pathMatch: 'full' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { IProtein } from '../models/iProtein.model';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { IId } from '../models/iId.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProteinService {\r\n\r\n  private URL: string = \"https://protein-757b1.firebaseio.com/proteins/\";\r\n  private endURL: string = \".json\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createProtein(userId: string, protein: IProtein): Observable<IId> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.post<IId>(url, protein).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  // Firebase database request, don't have any straight way (api)\r\n  public getProteins(userId: string): Observable<IProtein[]> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.get<Observable<IProtein[]>>(url)\r\n      .pipe(\r\n        map(\r\n          result => {\r\n            let proteins: IProtein[] = [];\r\n\r\n            Object.entries(result).map(value => {\r\n              value[1].id = value[0];\r\n              proteins.push(value[1]);\r\n            })\r\n\r\n            return proteins;\r\n          }),\r\n        catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public updateProtein(userId: string,protein: IProtein): Observable<IProtein> {\r\n    const { id, ...proteinToUpdate } = protein;\r\n    const url = `${this.URL}/${userId}/${id}${this.endURL}`;\r\n    return this.http.put<IProtein>(url, proteinToUpdate).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public deleteProtein(userId: string, proteinId: string): Observable<any> {\r\n    const url = `${this.URL}/${userId}/${proteinId}${this.endURL}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public deleteAllProteins(userId: string): Observable<any> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IUser } from '../models/iUser.model';\r\nimport { catchError, map, switchMap, tap, take } from 'rxjs/operators';\r\nimport { ILogin } from '../models/iLogin.model';\r\nimport { IId } from '../models/iId.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private URL: string = \"https://protein-757b1.firebaseio.com/users\";\r\n  private endURL: string = \".json\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createUser(user: IUser): Observable<IId> {\r\n    const url = this.URL + this.endURL;\r\n    return this.http.post<IId>(url, user)\r\n      .pipe(catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public getAllUsers(): Observable<IUser[]> {\r\n    const url = this.URL + this.endURL;\r\n    return this.http.get<IUser[]>(url)\r\n      .pipe(catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  // Firebase database request, don't have any straight way (api)\r\n  public login(login: ILogin): Observable<IUser> {\r\n    const url = this.URL + this.endURL;\r\n    return this.http.get<Observable<IUser>>(url)\r\n      .pipe(\r\n        map(\r\n          result => {\r\n            let register: IUser = null;\r\n\r\n            Object.entries(result).some(value => {\r\n\r\n              if (value[1].username === login.username && value[1].password === login.password) {\r\n                value[1].id = value[0];\r\n                register = value[1];\r\n                return true;\r\n              };\r\n            });\r\n\r\n            return register;\r\n          }),\r\n        catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public getUser(userId: string): Observable<IUser> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.get<IUser>(url)\r\n      .pipe(catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public updateUser(user: IUser): Observable<IUser> {\r\n    const { id, ...userToUpdate } = user;\r\n    const url = `${this.URL}/${id}${this.endURL}`;\r\n    return this.http.put<IUser>(url, userToUpdate).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n  public deleteUser(userId: string): Observable<any> {\r\n    const url = `${this.URL}/${userId}${this.endURL}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(error => Observable.throw(error.json())));\r\n  }\r\n\r\n}\r\n","export * from './protein.action';\r\nexport * from './user.action';","import { createAction, props } from '@ngrx/store';\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\nexport const LoadProteins = createAction('[Products] Load Proteins', props<{ userId: string }>());\r\nexport const LoadProteinsFail = createAction('[Products] Load Proteins Fail', props<{ error: Error }>());\r\nexport const LoadProteinsSuccess = createAction('[Products] Load Proteins Success', props<{ proteins: IProtein[] }>());\r\nexport const AddProtein = createAction('[Products] Add Protein', props<{ userId: string, protein: IProtein }>());\r\nexport const AddProteinFail = createAction('[Products] Add Protein Fail', props<{ error: Error }>());\r\nexport const AddProteinSuccess = createAction('[Products] Add Protein Success', props<{ protein: IProtein }>());\r\nexport const UpdateProtein = createAction('[Products] Update Protein', props<{ userId: string, protein: IProtein }>())\r\nexport const UpdateProteinFail = createAction('[Products] Update Protein Fail', props<{ error: Error }>())\r\nexport const UpdateProteinSuccess = createAction('[Products] Update Protein Success', props<{ protein: IProtein }>())\r\nexport const DeleteProtein = createAction('[Products] Delete Protein', props<{ userId: string, proteinId: string }>());\r\nexport const DeleteProteinFail = createAction('[Products] Delete Protein Fail', props<{ error: Error }>());\r\nexport const DeleteProteinSuccess = createAction('[Products] Delete Protein Success', props<{ proteinId: string }>());\r\nexport const DeleteAllProteins = createAction('[Products] Delete All Proteins', props<{ userId: string }>());\r\nexport const DeleteAllProteinsFail = createAction('[Products] Delete All Proteins Fail', props<{ error: Error }>());\r\nexport const DeleteAllProteinsSuccess = createAction('[Products] Delete All Proteins Success');\r\nexport const ProteinLogout = createAction('[Products] Protein Logout');\r\nexport const ProteinSavedOff = createAction('[Products] Protein Saved Off');","import { createAction, props } from '@ngrx/store';\r\nimport { IUser } from '../../shared/models/iUser.model';\r\nimport { ILogin } from 'src/app/shared/models/iLogin.model';\r\n\r\nexport const CreateUser = createAction('[Products] Create User', props<{ user: IUser }>());\r\nexport const CreateUserFail = createAction('[Products] Create User Fail', props<{ error: Error }>());\r\nexport const CreateUserSuccess = createAction('[Products] Create User Success', props<{ user: IUser }>());\r\nexport const LoadUser = createAction('[Products] Load User', props<{ userId: string }>());\r\nexport const LoadUserFail = createAction('[Products] Load User Fail', props<{ error: Error }>());\r\nexport const LoadUserSuccess = createAction('[Products] Load User Success', props<{ user: IUser }>());\r\nexport const LoginUser = createAction('[Products] Login User', props<{ login: ILogin }>());\r\nexport const LoginUserFail = createAction('[Products] Login User Fail', props<{ error: Error }>());\r\nexport const LoginUserSuccess = createAction('[Products] Login User Success', props<{ user: IUser }>());\r\nexport const UpdateUser = createAction('[Products] Update User', props<{ user: IUser }>());\r\nexport const UpdateUserFail = createAction('[Products] Update User Fail', props<{ error: Error }>());\r\nexport const UpdateUserSuccess = createAction('[Products] Update User Success', props<{ user: IUser }>());\r\nexport const DeleteUser = createAction('[Products] Delete User', props<{ userId: string }>());\r\nexport const DeleteUserFail = createAction('[Products] Delete User Fail', props<{ error: Error }>());\r\nexport const DeleteUserSuccess = createAction('[Products] Delete User Success');\r\nexport const UserUpdated = createAction('[Products] User Updated');\r\nexport const UserLogout = createAction('[Products] User Logout');\r\nexport const UserPopupOn = createAction('[Products] User Popup On');\r\nexport const UserPopupOff = createAction('[Products] User Popup Off');\r\nexport const UserCreatedOff = createAction('[Products] User Created Off');\r\nexport const UserLoginFailOff = createAction('[Products] User Login Fail Off');","import { UserEffects } from './user.effects';\r\nimport { ProteinEffect } from './protein.effect';\r\n\r\nexport const effects: any[] = [UserEffects, ProteinEffect];","import { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\n\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProteinService } from 'src/app/shared/services/protein.service';\r\nimport * as proteinActions from '../actions/protein.action';\r\n\r\nimport { IId } from 'src/app/shared/models/iId.model';\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProteinEffect {\r\n\r\n  constructor(private actions$: Actions, private proteinService: ProteinService) { }\r\n\r\n  public loadProteins$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.LoadProteins),\r\n    switchMap(action => this.proteinService.getProteins(action.userId).pipe(\r\n      map(proteins => proteinActions.LoadProteinsSuccess({ proteins })),\r\n      catchError(error => of(proteinActions.LoadProteinsFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public createProtein$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.AddProtein),\r\n    switchMap(action => this.proteinService.createProtein(action.userId, action.protein).pipe(\r\n      map((userId: IId) => {\r\n        const protein: IProtein = action.protein;\r\n        protein.id = userId.name;\r\n\r\n        return proteinActions.AddProteinSuccess({ protein });\r\n      }),\r\n      catchError(error => of(proteinActions.AddProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public updateProtein$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.UpdateProtein),\r\n    switchMap(action => this.proteinService.updateProtein(action.userId, action.protein).pipe(\r\n      map(() => proteinActions.UpdateProteinSuccess({ protein: action.protein })),\r\n      catchError(error => of(proteinActions.UpdateProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public deleteProtein$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.DeleteProtein),\r\n    switchMap(action => this.proteinService.deleteProtein(action.userId, action.proteinId).pipe(\r\n      map(() => proteinActions.DeleteProteinSuccess({ proteinId: action.proteinId })),\r\n      catchError(error => of(proteinActions.DeleteProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public deleteAllproteins$ = createEffect(() => this.actions$.pipe(ofType(proteinActions.DeleteAllProteins),\r\n    switchMap(action => this.proteinService.deleteAllProteins(action.userId).pipe(\r\n      map(() => proteinActions.DeleteAllProteinsSuccess()),\r\n      catchError(error => of(proteinActions.DeleteAllProteinsFail(error)))\r\n\r\n    ))\r\n  ));\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { switchMap, map, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport * as userActions from '../actions/user.action';\r\nimport * as proteinActions from '../actions/protein.action';\r\n\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\n\r\nimport { IId } from 'src/app/shared/models/iId.model';\r\nimport { IUser } from 'src/app/shared/models/iUser.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserEffects {\r\n\r\n  constructor(private actions$: Actions, private userService: UserService, private router: Router) { }\r\n\r\n  public loadUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.LoadUser),\r\n    switchMap(action => this.userService.getUser(action.userId).pipe(\r\n      map((user: IUser) => {\r\n        user.id = action.userId;\r\n        return userActions.LoadUserSuccess({ user: user })\r\n      }),\r\n      catchError(error => of(userActions.LoadUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public createUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.CreateUser),\r\n    switchMap(action => this.userService.createUser(action.user).pipe(\r\n      map((userId: IId) => {\r\n\r\n        const { user } = action;\r\n        user.id = userId.name;\r\n\r\n        return userActions.CreateUserSuccess({ user });\r\n      }),\r\n      catchError(error => of(userActions.CreateUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public loginUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.LoginUser),\r\n    switchMap(action => this.userService.login(action.login).pipe(\r\n      map((user: IUser) => {\r\n        this.router.navigate(['product/account']);\r\n        return userActions.LoginUserSuccess({ user });\r\n      }),\r\n      catchError(error => of(userActions.LoginUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public updateUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.UpdateUser),\r\n    switchMap(action => this.userService.updateUser(action.user).pipe(\r\n      map((user: IUser) => {\r\n        user.id = action.user.id;\r\n        return userActions.UpdateUserSuccess({ user });\r\n      }),\r\n      catchError(error => of(userActions.UpdateUserFail(error)))\r\n    ))\r\n  ));\r\n\r\n  public deleteUser$ = createEffect(() => this.actions$.pipe(ofType(userActions.DeleteUser),\r\n    switchMap(action => this.userService.deleteUser(action.userId).pipe(\r\n      map(() => {\r\n        this.router.navigate([\"product/home\"]);\r\n        return userActions.DeleteUserSuccess();\r\n      }),\r\n      catchError(error => of(proteinActions.DeleteProteinFail(error)))\r\n    ))\r\n  ));\r\n\r\n}","export * from './actions';\r\nexport * from './reducers';\r\nexport * from './selectors';\r\nexport * from './effects';","import { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\nimport { IProteinState, proteinReducer } from './protein.reducer';\r\nimport { IUserState, userReducer } from './user.reducer';\r\n\r\nexport interface IProductsState {\r\n    user: IUserState,\r\n    protein: IProteinState\r\n};\r\n\r\nexport const reducers: ActionReducerMap<IProductsState> = {\r\n    user: userReducer,\r\n    protein: proteinReducer\r\n};\r\n\r\nexport const getProductsState = createFeatureSelector<IProductsState>(\"products\");","import { EntityAdapter, createEntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport * as fromProtein from '../actions/protein.action';\r\nimport { UpdateStr } from '@ngrx/entity/src/models';\r\n\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\nexport const adapter: EntityAdapter<IProtein> = createEntityAdapter<IProtein>();\r\n\r\nexport interface IProteinState extends EntityState<IProtein> {\r\n    loaded: boolean;\r\n    saved: boolean;\r\n}\r\n\r\nexport const initialState: IProteinState = adapter.getInitialState({\r\n    loaded: false,\r\n    saved: false\r\n})\r\n\r\nexport const proteinReducer = createReducer<IProteinState>(\r\n    initialState\r\n    , on(\r\n        fromProtein.LoadProteinsSuccess, (state: IProteinState, action) => {\r\n            const { proteins } = action;\r\n            return {\r\n                ...adapter.addAll(proteins, state),\r\n                loaded: true\r\n            }\r\n        }\r\n    ), on(\r\n        fromProtein.ProteinLogout, () => {\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromProtein.AddProteinSuccess, (state: IProteinState, action) => {\r\n            const { protein } = action;\r\n            const newState = { ...state, saved: true }\r\n            return adapter.addOne(protein, newState);\r\n        }\r\n    ), on(\r\n        fromProtein.UpdateProteinSuccess, (state: IProteinState, action) => {\r\n            const { protein } = action;\r\n            const { id, ...newProtein } = protein;\r\n            const changes: Partial<IProtein> = { id, ...state.entities[id] = newProtein }\r\n            const update: UpdateStr<IProtein> = { id, changes };\r\n            return adapter.updateOne(update, state);\r\n        }\r\n    ), on(\r\n        fromProtein.DeleteProteinSuccess, (state: IProteinState, action) => {\r\n            const { proteinId } = action;\r\n            return adapter.removeOne(proteinId, state);\r\n        }\r\n    ), on(\r\n        fromProtein.DeleteAllProteinsSuccess, () => {\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromProtein.ProteinSavedOff, state => {\r\n            return {\r\n                ...state,\r\n                saved: false\r\n            };\r\n        }\r\n    )\r\n\r\n);\r\n\r\nconst { selectEntities, selectAll } = adapter.getSelectors();\r\n\r\nexport const getAllProteins = selectAll;\r\nexport const getProteinsEntities = selectEntities;\r\nexport const getProteinLoaded = (state: IProteinState) => state.loaded;\r\nexport const getProteinSaved = (state: IProteinState) => state.saved;","import { createReducer, on } from '@ngrx/store';\r\nimport * as fromUser from '../actions/user.action';\r\nimport { IUser } from 'src/app/shared/models/iUser.model';\r\n\r\nexport interface IUserState {\r\n    user: IUser;\r\n    created: boolean;\r\n    loginFail: boolean;\r\n    loaded: boolean;\r\n    updated: boolean;\r\n    popup: boolean;\r\n}\r\n\r\nexport const initialState: IUserState = {\r\n    user: null,\r\n    created: false,\r\n    loginFail: false,\r\n    loaded: false,\r\n    updated: false,\r\n    popup: false\r\n}\r\n\r\nexport const userReducer = createReducer<IUserState>(\r\n    initialState\r\n    , on(\r\n        fromUser.LoadUserSuccess, (state: IUserState, action) => {\r\n            const { user } = action;\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                user\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.LoginUserFail, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                loginFail: true\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserLogout, () => {\r\n            sessionStorage.removeItem(\"login\");\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromUser.UserPopupOn, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                popup: true\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserPopupOff, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                popup: false\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.CreateUserSuccess, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                created: true\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserCreatedOff, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                created: false\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UserLoginFailOff, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                loginFail: false\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.LoginUserSuccess, (state: IUserState, action) => {\r\n            const { user } = action;\r\n            sessionStorage.setItem(\"login\", user.id);\r\n            return {\r\n                ...state,\r\n                loaded: true,\r\n                user\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.UpdateUserSuccess, (state: IUserState, action) => {\r\n            const { user } = action;\r\n            return {\r\n                ...state,\r\n                updated: true,\r\n                user\r\n            };\r\n        }\r\n    ), on(\r\n        fromUser.DeleteUserSuccess, () => {\r\n            sessionStorage.removeItem(\"login\");\r\n            return initialState;\r\n        }\r\n    ), on(\r\n        fromUser.UserUpdated, (state: IUserState) => {\r\n            return {\r\n                ...state,\r\n                updated: false\r\n            };\r\n        }\r\n    )\r\n\r\n);\r\n\r\nexport const getUser = (state: IUserState) => state.user;\r\nexport const getCreated = (state: IUserState) => state.created;\r\nexport const getLoginFail = (state: IUserState) => state.loginFail;\r\nexport const getUserLoaded = (state: IUserState) => state.loaded;\r\nexport const getUserUpdated = (state: IUserState) => state.updated;\r\nexport const getPopup = (state: IUserState) => state.popup;","export * from './protein.selectors';\r\nexport * from './user.selectors';","import { createSelector } from '@ngrx/store';\r\n\r\nimport { IProtein } from 'src/app/shared/models/iProtein.model';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromProtein from '../reducers/protein.reducer';\r\nimport { getRouterState } from 'src/app/storeRouter';\r\n\r\nexport const getProteinState = createSelector(\r\n    fromFeature.getProductsState,\r\n    (proteinState: fromFeature.IProductsState) => proteinState.protein\r\n)\r\n\r\nexport const getAllProteins = createSelector(getProteinState, fromProtein.getAllProteins);\r\nexport const getProteinLoaded = createSelector(getProteinState, fromProtein.getProteinLoaded);\r\nexport const getProteinsEntities = createSelector(getProteinState, fromProtein.getProteinsEntities);\r\nexport const getProteinSaved = createSelector(getProteinState, fromProtein.getProteinSaved);\r\n\r\nexport const getSelectedProtein = createSelector(\r\n    getProteinsEntities,\r\n    getRouterState,\r\n    (entities, router): IProtein => router.state && entities[parseInt(router.state.params.proteinId)]\r\n)","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromUser from '../reducers/user.reducer'\r\n\r\nexport const getUserState = createSelector(\r\n    fromFeature.getProductsState,\r\n    (userState: fromFeature.IProductsState) => userState.user\r\n)\r\n\r\nexport const getUser = createSelector(getUserState, fromUser.getUser);\r\nexport const getUserCreated = createSelector(getUserState, fromUser.getCreated);\r\nexport const getLoginFail = createSelector(getUserState, fromUser.getLoginFail);\r\nexport const getUserLoaded = createSelector(getUserState, fromUser.getUserLoaded);\r\nexport const getUserUpdated = createSelector(getUserState, fromUser.getUserUpdated);\r\nexport const getPopup = createSelector(getUserState, fromUser.getPopup);","export * from './reducers';","import { RouterReducerState, routerReducer, RouterStateSerializer } from '@ngrx/router-store';\r\nimport { Params, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\n\r\nexport interface IRouterStateUrl {\r\n    url: string,\r\n    params: Params,\r\n    queryParams: Params\r\n}\r\n\r\nexport interface IState {\r\n    routerReducer: RouterReducerState<IRouterStateUrl>\r\n}\r\n\r\nexport const reducer: ActionReducerMap<IState> = {\r\n    routerReducer: routerReducer\r\n}\r\n\r\nexport const getRouterState = createFeatureSelector<RouterReducerState<IRouterStateUrl>>(\"routerReducer\");\r\n\r\nexport class CustomSerializer implements RouterStateSerializer<IRouterStateUrl> {\r\n\r\n    serialize(routerState: RouterStateSnapshot): IRouterStateUrl {\r\n\r\n        let state: ActivatedRouteSnapshot = routerState.root;\r\n\r\n        while (state.firstChild)\r\n            state = state.firstChild;\r\n\r\n        const { url } = routerState;\r\n        const { params } = state\r\n        const { queryParams } = routerState.root;\r\n\r\n        return { url, params, queryParams };\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}