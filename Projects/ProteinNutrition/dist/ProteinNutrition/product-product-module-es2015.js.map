{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/info/info.component.ts","./src/app/info/info.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/models/egg.model.ts","./src/app/shared/models/protein.model.ts","./src/app/shared/models/user.model.ts","./src/app/shared/modules/product/product.module.ts","./src/app/shared/modules/shared.module.ts","./src/app/shared/services/showCalculator.ts","./src/app/store/guards/index.ts","./src/app/store/guards/proteins.guard.ts","./src/app/store/guards/users.guard.ts"],"names":[],"mappings":"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","file":"product-product-module-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { AddProtein, ProteinSavedOff } from '../store/actions/protein.action'\r\nimport { UserPopupOn, UserPopupOff } from '../store/actions/user.action'\r\nimport { IProductsState, getUser, getPopup, getProteinSaved } from '../store';\r\n\r\nimport { IProtein } from '../shared/models/iProtein.model';\r\nimport { IUser } from '../shared/models/iUser.model';\r\nimport { Protein } from '../shared/models/protein.model';\r\nimport { Egg } from '../shared/models/egg.model';\r\n\r\nimport { showCalculator } from '../shared/services/showCalculator';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  public acccept: boolean;\r\n  public user: IUser;\r\n  public protein: IProtein;\r\n\r\n  // contain the disabled value inside dropdown\r\n  public disabledValue: string;\r\n\r\n  // Messages to user\r\n  public showMessage: string = \"\";\r\n  public showMessageLogin: string = \"\";\r\n\r\n  // Toggles\r\n  public saveToggle: boolean;\r\n  public savedToggle: boolean;\r\n  public popupToggle: boolean;\r\n  public infoToggle: boolean;\r\n\r\n  private clearInterval = [];\r\n  private unSubscribe: Subscription[] = [];\r\n\r\n  constructor(private store: Store<IProductsState>, private router: Router, private showCalculator: showCalculator) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.protein = new Protein(new Egg());\r\n\r\n    if (!!localStorage.getItem(\"acccept\")) {\r\n      this.acccept = true;\r\n      this.visibility();\r\n    }\r\n\r\n    this.unSubscribe.push(this.store.pipe<boolean>(select(getProteinSaved)).subscribe(\r\n      isSaved => this.savedToggle = isSaved,\r\n      catchError(error => of(console.log(error)))\r\n    ));\r\n\r\n    this.unSubscribe.push(this.store.pipe<IUser>(select(getUser)).subscribe(\r\n      user => {\r\n        const userId: boolean = !!sessionStorage.getItem('login');\r\n\r\n        if (!user && !userId)\r\n          this.popup();\r\n\r\n        this.user = user\r\n\r\n      },\r\n      catchError(error => of(console.log(error)))\r\n    ));\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.store.dispatch(UserPopupOff());\r\n    this.clearInterval.forEach(id => clearInterval(id));\r\n    this.unSubscribe.forEach(subscribe => subscribe.unsubscribe());\r\n\r\n  }\r\n\r\n  public popup(): void {\r\n\r\n    this.clearInterval.push(setTimeout(() => {\r\n\r\n      if (!this.user)\r\n        this.store.dispatch(UserPopupOn());\r\n\r\n      this.unSubscribe.push(this.store.pipe<boolean>(select(getPopup)).subscribe(\r\n        popupToggle => this.popupToggle = popupToggle,\r\n        catchError(error => of(console.log(error)))\r\n      ))\r\n    }, 8000));\r\n\r\n  }\r\n\r\n  public cancelPopup(): void {\r\n    this.store.dispatch(UserPopupOff());\r\n  }\r\n\r\n  public cancelShow(): void {\r\n    this.visibilityOff('show');\r\n  }\r\n\r\n  public info(): void {\r\n    this.infoToggle = !this.infoToggle;\r\n  }\r\n\r\n  public isAcccept(): void {\r\n\r\n    this.acccept = true;\r\n    this.visibility();\r\n    localStorage.setItem('acccept', \"true\");\r\n  }\r\n\r\n  public submit(): void {\r\n\r\n    const userId: string = this.user.id;\r\n\r\n    // Create a new reference\r\n    const protein: IProtein = { ...this.protein };\r\n    const { egg } = protein\r\n    protein.egg = { ...egg };\r\n\r\n    // Send clean Object without undefined properties to Store\r\n    Object.keys(protein).forEach(key => !protein[key] && delete protein[key]);\r\n    if (!protein.egg || !protein.egg.sizeEgg || !protein.egg.amount)\r\n      delete protein.egg;\r\n\r\n    this.store.dispatch(AddProtein({ userId, protein }));\r\n  }\r\n\r\n  public show(): void {\r\n\r\n    const { id, egg, ...protein } = this.protein;\r\n    const sum: number = this.showCalculator.calculateProtein(protein, egg);\r\n\r\n    this.showMessage = `You eat ${sum} protein approximately.`;\r\n\r\n    if (this.user) {\r\n      const value: number = this.user.weight * 2 - sum;\r\n      this.showMessageLogin = value > 0 ? `You need more ${value}` : 'You Eat enough protein for today good job!';\r\n    }\r\n\r\n    this.visibilityOn('show');\r\n  }\r\n\r\n  private visibility(): void {\r\n\r\n    let timeToShow = 100;\r\n    const { id, ...protein } = this.protein;\r\n    Object.keys(protein).forEach(key => {\r\n      this.clearInterval.push(setTimeout(() => this.visibilityOn(key), timeToShow));\r\n      timeToShow += 250;\r\n    });\r\n\r\n    this.clearInterval.push(setTimeout(() => this.visibilityOn(\"submit\"), timeToShow));\r\n\r\n  }\r\n\r\n  private visibilityOn(name: string): void {\r\n    document.getElementById(name).className = \"visibility: visible\";\r\n  }\r\n\r\n  private visibilityOff(name: string): void {\r\n    document.getElementById(name).className = \"visibility: invisible\";\r\n  }\r\n\r\n  public register(): void {\r\n    this.router.navigate(['product/register']);\r\n  }\r\n\r\n  public loginPage(): void {\r\n    this.router.navigate(['/product/account/login']);\r\n  }\r\n\r\n  // Check if form is valid ( one of input must be with value )\r\n  public saveSwitch(): void {\r\n    const { id, egg, ...protein } = this.protein;\r\n    let updateToggle: boolean = false;\r\n    Object.values(protein).some(value => value && (updateToggle = true) && true);\r\n    egg.amount && egg.sizeEgg && (updateToggle = true);\r\n\r\n    this.saveToggle = updateToggle;\r\n  }\r\n\r\n  public saveOff(): void {\r\n    this.store.dispatch(ProteinSavedOff());\r\n\r\n  }\r\n\r\n}","<div>\r\n\r\n  <div [class.d-none]=\"!popupToggle\">\r\n    <div class=\"card popup\">\r\n      <img src=\"/assets/photos/popup.jpg\" class=\"cardImage\">\r\n      <button (click)=\"cancelPopup()\" class=\"text-right cancel m-2 ml-auto\">\r\n        <i class=\"fas fa-times \"></i>\r\n      </button>\r\n      <nav class=\"card-body text-center\">\r\n        <h5 class=\"card-title\">Don't have an account yet?</h5>\r\n        <span>Click </span>\r\n        <button (click)=\"register()\" class=\"navigate\">here</button>\r\n        <span> to register or </span>\r\n        <button (click)=\"loginPage()\" class=\"navigate\">here</button>\r\n        <span> to login</span>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n\r\n  <div [class.d-none]=\"!savedToggle\">\r\n    <div class=\"card text-center save\">\r\n      <h4>Your protein saved successfully</h4>\r\n      <input type=\"button\" (click)=\"saveOff()\" value=\"&#xf00c;\" class=\"fas\">\r\n    </div>\r\n  </div>\r\n\r\n  <div [class.opacity]=\"popupToggle\" class=\"text-center p-3\">\r\n    <h1>Muscle is your life?</h1>\r\n    <h2 class=\"d-inline\">Let's start to calculate your protein </h2>\r\n    <input type=\"button\" (click)=\"info()\" value=\"&#xf059;\" class=\"far fa-lg questionMark\">\r\n  </div>\r\n\r\n  <div class=\"row justify-content-center mb-3 m-0\">\r\n\r\n    <button (click)=\"info()\" class=\"arrow\"><i class=\"fas fa-arrow-down fa-3x position-relative\"></i></button>\r\n\r\n    <div *ngIf=\"infoToggle\" class=\"col-12 text-center info\">\r\n      <h4>- more information -</h4>\r\n      <h5>You need to fill everyting you eat from the list , and will see how much protein you gain.</h5>\r\n      <p>You can create a lot of mixes and save it inside your favorite list <span>( username is required )</span></p>\r\n      <input type=\"button\" value=\"&#xf00c;  O.k\" (click)=\"info()\" class=\"fas\">\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"text-center\">\r\n    <button *ngIf=\"!acccept\" (click)=\"isAcccept()\" class=\"btn-lg btn-danger col-10\">Lets started</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"acccept\" [class.opacity]=\"popupToggle\">\r\n\r\n    <form #proteinForm=\"ngForm\" (change)=\"saveSwitch()\" (ngSubmit)=\"submit()\">\r\n\r\n      <div class=\"container\">\r\n\r\n        <div id=\"egg\" class=\"invisible\">\r\n\r\n          <div class=\"row justify-content-center\">\r\n            <small class=\"text-danger p-2 m-1\"\r\n              [class.d-none]=\"egg.untouched || !egg.value || egg.value && eggSize.dirty\">You must choose a size <i\r\n                class=\"fas fa-arrow-circle-right\"></i></small>\r\n          </div>\r\n\r\n          <div class=\"row justify-content-center\">\r\n\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Egg</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Egg\" #egg=\"ngModel\" name=\"egg\" pattern=\"^[1-9][0-9]*$\" placeholder=\"amount\"\r\n              [(ngModel)]=\"protein.egg.amount\">\r\n\r\n            <select class=\"border border-danger p-1 m-1 space\" [required]=\"egg.value\" [(ngModel)]=\"protein.egg.sizeEgg\"\r\n              #eggSize=\"ngModel\" name=\"eggSize\">\r\n              <option [value]=\"disabledValue\" disabled>Size</option>\r\n              <option value='S'>S</option>\r\n              <option value='M'>M</option>\r\n              <option value='L'>L</option>\r\n            </select>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div id=\"bread\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Bread</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Bread\" name=\"bread\" pattern=\"^[1-9][0-9]*$\" placeholder=\"slices\" [(ngModel)]=\"protein.bread\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"tuna\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Tuna</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Tuna\" name=\"tuna\" pattern=\"^[1-9][0-9]*$\" placeholder=\"grams\" [(ngModel)]=\"protein.tuna\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"meat\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Meat</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Meat\" name=\"meat\" pattern=\"^[1-9][0-9]*$\" placeholder=\"grams\" [(ngModel)]=\"protein.meat\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"cheese\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Cheese</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Cheese\" name=\"cheese\" pattern=\"^[1-9][0-9]*$\" placeholder=\"grams\" [(ngModel)]=\"protein.cheese\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"cottage\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Cottage</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Cottage\" name=\"cottage\" pattern=\"^[1-9][0-9]*$\" placeholder=\"grams\" [(ngModel)]=\"protein.cottage\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"quinoa\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Quinoa</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Quinoa\" name=\"quinoa\" pattern=\"^[1-9][0-9]*$\" placeholder=\"grams\" [(ngModel)]=\"protein.quinoa\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"almonds\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Almonds</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Almonds\" name=\"almonds\" pattern=\"^[1-9][0-9]*$\" placeholder=\"handful\"\r\n              [(ngModel)]=\"protein.almonds\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"powder\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Powder</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Powder\" name=\"powder\" pattern=\"^[1-9][0-9]*$\" placeholder=\"portions\" [(ngModel)]=\"protein.powder\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"gainer\" class=\"invisible\">\r\n          <div class=\"row justify-content-center\">\r\n            <label class=\"p-1 m-1 col-2 col-sm-2 col-md-1\">Gainer</label>\r\n            <input class=\"text-center rounded-pill border border-danger p-1 m-1 col-5 col-md-3 col-lg-2\" type=\"number\"\r\n              title=\"Gainer\" name=\"gainer\" pattern=\"^[1-9][0-9]*$\" placeholder=\"portions\" [(ngModel)]=\"protein.gainer\">\r\n            <div class=\"space p-1 m-1\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"submit\" class=\"invisible\">\r\n\r\n          <small *ngIf=\"proteinForm.invalid\" class=\"text-center text-danger d-block m-1\">* You must to enter a positive\r\n            values</small>\r\n\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-1\"></div>\r\n\r\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 button p-0 m-1\">\r\n              <input [disabled]=\"proteinForm.invalid\" type=\"button\" value=\"&#xf06e; Show\" (click)=\"show()\"\r\n                class=\"btn btn-secondary border far col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 innerButton radius\">\r\n            </div>\r\n\r\n            <div class=\"col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 p-0 m-1 button\">\r\n              <input [disabled]=\"!user || !saveToggle || !proteinForm.valid\" type=\"submit\" value=\"&#xf0c7; Save\"\r\n                class=\"btn btn-secondary radius border far col-xl-2 col-lg-2 col-md-2 col-sm-3 col-3 innerButton\">\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </form>\r\n\r\n    <div id=\"show\" class=\"invisible\">\r\n\r\n      <div class=\"card show text-center\">\r\n\r\n        <div class=\"card-body\">\r\n          <p>{{showMessage}}</p>\r\n          <p *ngIf=\"user\">{{showMessageLogin}}</p>\r\n          <input type=\"button\" value=\"&#xf164;\" (click)=\"cancelShow()\" class=\"fas showButton\">\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.css']\r\n})\r\nexport class InfoComponent implements OnInit, OnDestroy {\r\n\r\n  private audio = new Audio();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.play();\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n\r\n    this.audio.pause();\r\n\r\n  }\r\n\r\n  public play(): void {\r\n\r\n    this.audio.src = \"assets/audio/music.mp3\";\r\n    this.audio.play();\r\n    this.audio.volume = 0.05;\r\n\r\n  }\r\n\r\n}\r\n","<div>\r\n\r\n    <img src=\"/assets/photos/body_building.jpg\" class=\"backgroundImage\">\r\n\r\n    <article class=\"container\">\r\n\r\n        <h2 class=\"text-center\">Protein for healthy muscle and bone</h2>\r\n\r\n        <strong>Proteins in the diet contribute significantly to the production of energy for the body.</strong>\r\n\r\n        <p>Dietary proteins provide amino acids as building blocks for growth, repair and maintenance of proteins in the\r\n            body. The body does not have a mechanism for storing amino acids or protein, unlike carbohydrates which can\r\n            be\r\n            stored as glycogen and fats that can be stored as triacylglycerides.</p>\r\n\r\n        <p>When we have sufficient protein and an adequate supply of energy in our diet, the excess amino acids that are\r\n            not\r\n            used for growth or repair are either converted to glucose in the liver or are used to provide energy.\r\n            Without\r\n            enough supply of dietary energy from carbohydrates and fats, the body preferentially uses amino acids for\r\n            energy\r\n            production at the expense of growth, maintenance and repair. This means that it is particularly important as\r\n            we\r\n            get older to provide enough energy in the diet from carbohydrates and fats so that dietary protein can be\r\n            used\r\n            for repair and maintenance.</p>\r\n\r\n        <p>Dietary protein is a key nutrient for muscle and bone health. Adequate dietary protein during childhood and\r\n            adolescent years is essential in order to accumulate an adequate bone and muscle mass during growth. For\r\n            muscles\r\n            to grow, they need both protein and exercise, and the same is true also for bone. Dietary protein can also\r\n            help\r\n            slow down the rate of bone and muscle loss that occurs as we get older. Low and high protein diets can\r\n            affect\r\n            bone metabolism in different ways.</p>\r\n\r\n        <p>Skeletal muscle represents a pool of protein that can be called upon as a source of energy when food is\r\n            scarce or\r\n            when the body is stressed such as after injury. A lack of protein in the diet will lead to poor muscle\r\n            strength\r\n            which can increase the risk of falling, especially in the elderly and contributes to poor recovery in\r\n            patients\r\n            who have had fractures. Low protein diets are also associated with decreased intestinal calcium absorption\r\n            and\r\n            an increase in the levels of the key bone regulatory hormone parathyroid hormone.</p>\r\n\r\n        <p>High protein diets can increase calcium absorption and lead to an increased excretion of calcium in urine.\r\n            High\r\n            protein diets are also linked to increased production of an important bone growth factor - insulin-like\r\n            growth\r\n            factor 1. High protein diets are associated with an increased bone mineral content, a decrease in the risk\r\n            of\r\n            fractures, and improved fracture repair and recovery after injury.</p>\r\n\r\n        <p>Muscle contains about 30% protein by weight. You might be surprised to learn that bone contains a higher\r\n            percentage of protein than muscle weight for weight. This is because, in muscle, the proteins are mainly\r\n            found\r\n            inside the muscle cells, which contain a lot of water, while in bone, much of the protein is found outside\r\n            of\r\n            cells in densely packed fibres that contain little water.</p>\r\n\r\n        <h4 class=\"text-center\">Summary - all people must to eat food with protein.</h4>\r\n\r\n        <small>&copy; University of Liverpool/The University of Sheffield/Newcastle University</small>\r\n\r\n    </article>\r\n\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { CreateUser, UserCreatedOff } from '../store/actions/user.action';\r\nimport { getUserCreated } from '../store/selectors/user.selectors';\r\nimport { IProductsState } from '../store/reducers/index';\r\n\r\nimport { IUser } from '../shared/models/iUser.model';\r\nimport { User } from '../shared/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\r\n  public user: IUser;\r\n  public terms: boolean;\r\n  public userCreated$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<IProductsState>, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.user = new User(undefined, undefined, undefined, undefined, undefined);\r\n    this.userCreated$ = this.store.pipe(select(getUserCreated));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.store.dispatch(UserCreatedOff());\r\n  }\r\n\r\n  public createUserNavigate(): void {\r\n    this.router.navigate(['product/account/login']);\r\n  }\r\n\r\n  public createUser(): void {\r\n\r\n    const user = this.user;\r\n    this.store.dispatch(CreateUser({ user }));\r\n\r\n  }\r\n\r\n  public showTerms(): void {\r\n    this.terms = !this.terms;\r\n  }\r\n\r\n}\r\n","<div>\r\n\r\n    <div *ngIf=\"userCreated$ | async\" class=\"text-center\">\r\n\r\n        <div class=\"userCreated\">\r\n\r\n            <h4>Your user has been created successfully!</h4>\r\n            <button (click)=\"createUserNavigate()\" class=\"userCreatedButton\">Login <i\r\n                    class=\"fas fa-sign-in-alt\"></i></button>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div [class.opacity]=\"userCreated$ | async\" class=\"card\">\r\n\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-8\">\r\n\r\n                <div class=\"card-body\">\r\n\r\n                    <h5 class=\"card-title \">Lets create an user</h5>\r\n                    <form (ngSubmit)=\"createUser()\" #userForm=\"ngForm\">\r\n\r\n                        <div>\r\n                            <p class=\"m-0\">Enter an username</p>\r\n                            <small class=\"text-danger\" [class.d-none]=\"username.untouched || username.valid\">\r\n                                Must to enter only three letters at least</small>\r\n\r\n                            <input type=\"text\" title=\"Enter an username\" name=\"username\" #username=\"ngModel\"\r\n                                [(ngModel)]=\"user.username\" required pattern=\"^[a-zA-Z]{3,}$\"\r\n                                [class.border-danger]=\"username.invalid && username.touched\"\r\n                                class=\"rounded-pill border border-primary\">\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p class=\"m-0\">Enter a password</p>\r\n\r\n                            <div class=\"text-danger\" [class.d-none]=\"password.untouched || password.valid\">\r\n                                <small>Must to enter eight letters at least.</small>\r\n                                <small>(one upper case one lower case and a number)</small>\r\n                            </div>\r\n\r\n                            <input type=\"password\" title=\"Enter a password\" name=\"password\" #password=\"ngModel\"\r\n                                [(ngModel)]=\"user.password\" required\r\n                                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\"\r\n                                [class.border-danger]=\"password.invalid && password.touched\"\r\n                                class=\"rounded-pill border border-primary\">\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p class=\"m-0\">Enter again a password to confirm</p>\r\n\r\n                            <div class=\"text-danger\"\r\n                                [class.d-none]=\"confirmPassword.untouched || confirmPassword.valid && confirmPassword.value===password.value\">\r\n                                <small>Your passwords isn't match!</small>\r\n                                <small>Please try again.</small>\r\n                            </div>\r\n\r\n                            <input type=\"password\" title=\"Enter again a password to confirm\" name=\"confirmPassword\"\r\n                                #confirmPassword=\"ngModel\" [(ngModel)]=\"user.confirmPassword\" required\r\n                                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$\" [disabled]=\"password.invalid\"\r\n                                [class.border-danger]=\"confirmPassword.touched && confirmPassword.value!==password.value\"\r\n                                class=\"rounded-pill border border-primary\">\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p class=\"m-0\">Enter your weight</p>\r\n                            <small class=\"text-danger\" [class.d-none]=\"weight.untouched || weight.valid\">Your weight\r\n                                must be greater than 0.</small>\r\n\r\n                            <input type=\"number\" title=\"Enter your weight\" name=\"weight\" #weight=\"ngModel\"\r\n                                [(ngModel)]=\"user.weight\" required pattern=\"^[1-9]\\d*$\"\r\n                                [class.border-danger]=\"weight.invalid && weight.touched\"\r\n                                class=\"rounded-pill border border-primary\">\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p class=\"m-0\">What is your gender ?</p>\r\n\r\n                            <div class=\"text-center\">\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"male\" #male=\"ngModel\" value=\"Male\" required\r\n                                        [(ngModel)]=\"user.gender\">\r\n                                    <span class=\"rounded-pill text-center m-1 radioMale\"><i\r\n                                            class=\"fas fa-male m-1\"></i></span>\r\n                                </label>\r\n\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"female\" #female=\"ngModel\" value=\"Female\" required\r\n                                        [(ngModel)]=\"user.gender\">\r\n                                    <span class=\"rounded-pill text-center m-1 radioFemale\"><i\r\n                                            class=\"fas fa-female m-1\"></i></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <small>\r\n                                <label class=\"width\">\r\n                                    <input type=\"checkbox\" name=\"accept\" #accept=\"ngModel\" ngModel required>\r\n                                    <span>\r\n                                        <i *ngIf=\"accept.valid\" class=\"fas fa-check-circle fa-lg checkbox\"></i>\r\n                                        <i *ngIf=\"accept.invalid\" class=\"fas fa-circle fa-lg checkbox\"></i>\r\n                                    </span>\r\n                                </label>\r\n                                <label>By clicking Sign Up, you</label><br>\r\n                                <label class=\"width\"></label>\r\n                                <span>agree to our </span>\r\n                                <input type=\"button\" value=\"Terms\" class=\"terms\" (click)=\"showTerms()\">\r\n\r\n                            </small>\r\n\r\n                            <div *ngIf=\"terms\">\r\n                                <p>By clicking Sign Up, you agree to our Data Policy and Cookies Policy</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <hr>\r\n                            <div class=\"text-center\">\r\n                                <input type=\"submit\" value=\"Sign Up &#xf234;\"\r\n                                    [class.invalid]=\"(username.touched && password.touched && confirmPassword.touched && weight.touched && accept.dirty && (male.dirty || female.dirty)) && (confirmPassword.value!==password.value || userForm.form.invalid)\"\r\n                                    [disabled]=\"userForm.form.invalid || confirmPassword.value!==password.value && confirmPassword.touched\"\r\n                                    class=\"btn btn-outline-primary rounded-pill fas m-1 w-75\">\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n                <img src=\"/assets/photos/bodybuilder_register.jpg\" class=\"image\">\r\n                <hr>\r\n                <small>Dreams come true sometimes</small>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { IEgg } from './iEgg.model';\r\n\r\nexport class Egg implements IEgg {\r\n    constructor(\r\n        public amount?: number,\r\n        public sizeEgg?: string\r\n    ) { }\r\n}","import { IProtein } from './iProtein.model';\r\nimport { IEgg } from './iEgg.model';\r\n\r\nexport class Protein implements IProtein {\r\n    constructor(\r\n        public egg?: IEgg,\r\n        public bread?: number,\r\n        public tuna?: number,\r\n        public meat?: number,\r\n        public cheese?: number,\r\n        public cottage?: number,\r\n        public quinoa?: number,\r\n        public almonds?: number,\r\n        public powder?: number,\r\n        public gainer?: number,\r\n        public id?: string\r\n    ) { }\r\n}","import { IUser } from './iUser.model';\r\n\r\nexport class User implements IUser {\r\n    constructor(\r\n        public username: string,\r\n        public password: string,\r\n        public confirmPassword: string,\r\n        public gender: string,\r\n        public weight: number,\r\n        public id?: string\r\n    ) { }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared.module';\r\nimport { guards } from 'src/app/store/guards';\r\nimport { HomeComponent } from 'src/app/home/home.component';\r\nimport { RegisterComponent } from 'src/app/register/register.component';\r\nimport { InfoComponent } from 'src/app/info/info.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'home', component: HomeComponent, canActivate: guards },\r\n    { path: 'account', loadChildren: () => import('../account/account.module').then(m => m.AccountModule) },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'info', component: InfoComponent },\r\n]\r\n\r\n@NgModule({\r\n    declarations: [HomeComponent, RegisterComponent, InfoComponent],\r\n    imports: [\r\n        SharedModule,\r\n        RouterModule.forChild(routes)\r\n    ]\r\n})\r\nexport class ProductModule { }\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\r\nimport { IProtein } from '../models/iProtein.model';\r\nimport { IEgg } from '../models/iEgg.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class showCalculator {\r\n\r\n  constructor() { }\r\n\r\n  public calculateProtein(protein: IProtein, egg: IEgg): number {\r\n\r\n    let sum: number = 0;\r\n\r\n    if (egg && egg.amount && egg.sizeEgg) {\r\n\r\n      if (egg.sizeEgg === 'S')\r\n        sum += egg.amount * 6.029;\r\n      else egg.sizeEgg === 'M' ? sum += egg.amount * 7.285 : sum += egg.amount * 8.541;\r\n\r\n    }\r\n\r\n    protein.bread *= 3.24;\r\n    protein.tuna /= 3.571428571428571;\r\n    protein.meat /= 3.225806451612903;\r\n    protein.cheese /= 10.52631578947368;\r\n    protein.cottage /= 9.090909090909091;\r\n    protein.quinoa /= 7.575757575757576;\r\n    protein.almonds *= 6.154;\r\n    protein.powder *= 25;\r\n    protein.gainer *= 22;\r\n\r\n    Object.values(protein).forEach(value => value ? sum += value : sum += 0);\r\n\r\n    return Number.parseFloat(sum.toFixed(4));\r\n\r\n  }\r\n\r\n}\r\n","import { UsersGuard } from './users.guard';\r\nimport { ProteinsGuard } from './proteins.guard';\r\n\r\nexport const guards: any[] = [UsersGuard, ProteinsGuard];","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, switchMap, catchError, take } from 'rxjs/operators';\r\nimport { CanActivate } from '@angular/router';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState } from '../reducers';\r\nimport * as fromStore from '../index';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProteinsGuard implements CanActivate {\r\n\r\n  constructor(private store: Store<IProductsState>) { }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.checkStore().pipe(\r\n      switchMap(() => of(true)),\r\n      catchError(() => of(false))\r\n    )\r\n  }\r\n\r\n  private checkStore(): Observable<boolean> {\r\n    return this.store.pipe(select(fromStore.getProteinLoaded)).pipe(\r\n      tap(loaded => {\r\n        const userId: string = sessionStorage.getItem('login');\r\n\r\n        if (!loaded && userId)\r\n          this.store.dispatch(fromStore.LoadProteins({ userId }))\r\n      }),\r\n      take(1)\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, switchMap, catchError, take } from 'rxjs/operators';\r\nimport { CanActivate } from '@angular/router';\r\n\r\nimport { Store, select } from '@ngrx/store';\r\nimport { IProductsState } from '../reducers';\r\nimport * as fromStore from '../index';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersGuard implements CanActivate {\r\n\r\n  constructor(private store: Store<IProductsState>) { }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.checkStore().pipe(\r\n      switchMap(() => of(true)),\r\n      catchError(() => of(false))\r\n    )\r\n  }\r\n\r\n  private checkStore(): Observable<boolean> {\r\n    return this.store.pipe(select(fromStore.getUserLoaded)).pipe(\r\n      tap(loaded => {\r\n        const userId: string = sessionStorage.getItem('login');\r\n\r\n        if (!loaded && userId)\r\n          this.store.dispatch(fromStore.LoadUser({ userId }))\r\n      }),\r\n      take(1)\r\n    )\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}